{"ast":null,"code":"import { useCallback } from 'react';\nimport { useAnimatedStyle } from \"./useAnimatedStyle\";\nexport var useAnimatedProps = useAnimatedStyle;\nexport function useWorkletCallback(fun, deps) {\n  return useCallback(fun, deps != null ? deps : []);\n}\nexport { useEvent, useHandler } from \"./utils\";","map":{"version":3,"names":["useCallback","useAnimatedStyle","useAnimatedProps","useWorkletCallback","fun","deps","useEvent","useHandler"],"sources":["D:\\xampp\\htdocs\\gotravel1\\toursim-simplified-through-voice-master\\toursim-simplified-through-voice-master\\node_modules\\react-native-reanimated\\lib\\module\\reanimated2\\hook\\Hooks.ts"],"sourcesContent":["import { useCallback } from 'react';\nimport { DependencyList } from './commonTypes';\nimport { useAnimatedStyle } from './useAnimatedStyle';\n\n// TODO: we should make sure that when useAP is used we are not assigning styles\n// when you need styles to animated you should always use useAS\nexport const useAnimatedProps = useAnimatedStyle;\n\nexport function useWorkletCallback<A extends unknown[], R>(\n  fun: (...args: A) => R,\n  deps?: DependencyList\n): (...args: Parameters<typeof fun>) => R {\n  return useCallback(fun, deps ?? []);\n}\n\nexport { useEvent, useHandler } from './utils';\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AAEA,SAASC,gBAAT;AAIA,OAAO,IAAMC,gBAAgB,GAAGD,gBAAzB;AAEP,OAAO,SAASE,kBAATA,CACLC,GADK,EAELC,IAFK,EAGmC;EACxC,OAAOL,WAAW,CAACI,GAAD,EAAMC,IAAI,WAAJA,IAAI,GAAI,EAAd,CAAlB;AACD;AAED,SAASC,QAAT,EAAmBC,UAAnB"},"metadata":{},"sourceType":"module","externalDependencies":[]}