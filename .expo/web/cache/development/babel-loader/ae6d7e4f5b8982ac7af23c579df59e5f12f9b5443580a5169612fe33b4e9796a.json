{"ast":null,"code":"import { StyledComponent } from \"tailwindcss-react-native\";","map":{"version":3,"names":[],"sources":["D:/xampp/htdocs/gotravel1/tourism simplified through voice/App.js"],"sourcesContent":["// import React ,{useState} from \"react\";\r\n// import { StatusBar } from \"expo-status-bar\";\r\n// import { SafeAreaView, Text, View } from \"react-native\";\r\n// import { TailwindProvider } from \"tailwindcss-react-native\";\r\n// import { NavigationContainer } from \"@react-navigation/native\";\r\n// import { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\n// import HomeScreen from \"./screens/HomeScreen\";\r\n// import Discover from \"./screens/Discover\";\r\n// import ItemScreen from \"./screens/ItemScreen\";\r\n// import Map from \"./screens/Map\";\r\n// import New from \"./screens/New\";\r\n\r\n// //import Login from \"./screens/Login\";\r\n// import 'react-native-gesture-handler';\r\n// import 'regenerator-runtime/runtime';\r\n// import Login from \"./screens/Login\";\r\n// import New_sign from \"./screens/New_sign\";\r\n// import Contact from \"./screens/Contact\";\r\n// import Speech from \"./screens/Speech\";\r\n// import { recognition } from \"./api/VoiceRecognization\";\r\n// import { useNavigation, redirect, Route, Routes } from \"react-router-dom\";\r\n// //import { Link, useNavigation} from \"@react-navigation/native\";\r\n// import SpeechRecognition,{useSpeechRecognition} from \"react-speech-recognition\";\r\n// import { useFocusEffect } from \"@react-navigation/native\";\r\n// import { useLayoutEffect } from \"react\";\r\n// import { Navigate, useNavigate } from \"react-router-dom\";\r\n// import {useHistory} from 'react-router-dom';\r\n// const Stack = createNativeStackNavigator();\r\n\r\n\r\n// export default function App() {\r\n//   //const navigate = Navigate();\r\n//   const navigation = useNavigation();\r\n  \r\n//   // // useLayoutEffect(() => {\r\n//   // //   navigate.setOptions({\r\n//   // //     headerShown: false,\r\n//   // //   });\r\n//   // // }, []);\r\n\r\n//   useFocusEffect(\r\n//     React.useCallback(() => {\r\n//       const onBackPress = () => {\r\n//         navigation.goBack();\r\n//         return true;\r\n//       };\r\n//     }\r\n//     )\r\n//     )\r\n\r\n//     BackHandler.addEventListener('hardwareBackPress', onBackPress);\r\n\r\n \r\n\r\n//   console.log(recognition)\r\n//   recognition.start()\r\n\r\n//   recognition.onresult=(event)=>{\r\n  \r\n//     const command =event.results[0][0].transcript;\r\n//     //console.log(command);\r\n    \r\n//     if(command.includes(\"navigate to\") || command.includes(\"go to\")){\r\n      \r\n//        if(command.includes(\"homepage\") || command.includes(\"indexpage\")){\r\n//           //navigate.push(\"/HomeScreen\")\r\n//            //navigate.push(\"/HomeScreen\")\r\n//           //navigation.push()\r\n//              console.log(command);\r\n//         }\r\n//         else if(command.includes(\"Discover\") || command.includes(\"Discover page\")){\r\n//     //    navigate.push(\"/Discover\")\r\n//               console.log(command);\r\n//       }\r\n//         else if(command.includes(\"Map\") || command.includes(\"Map page\")){\r\n//     //    navigate.push(\"/Map\")\r\n//               console.log(command);\r\n//       }\r\n//         else if(command.includes(\"Contact\") || command.includes(\"Contact page\")){\r\n//     //    navigate.push(\"/Contact\")\r\n//               console.log(command);\r\n//       }\r\n//         else if(command.includes(\"Sign up\") || command.includes(\"Sign up page\")){\r\n//     //    navigate.push(\"/New\")\r\n//               console.log(command);\r\n//       }\r\n//    }\r\n//   }\r\n\r\n//   recognition.onend=()=>{\r\n//     recognition.start()\r\n\r\n//   }\r\n//   return (\r\n    \r\n//     <TailwindProvider>\r\n//       <NavigationContainer>\r\n//         <Stack.Navigator>\r\n//           <Routes>\r\n//           <Route>\r\n//           <Stack.Screen name=\"Home\" component={HomeScreen} /></Route>\r\n//           <Route>\r\n//           <Stack.Screen name=\"Discover\" component={Discover} /></Route>\r\n//           <Route>\r\n//           <Stack.Screen name=\"ItemScreen\" component={ItemScreen} /></Route>\r\n//           <Route>\r\n//           <Stack.Screen name=\"New\" component={New}></Stack.Screen></Route>\r\n//           <Stack.Screen name=\"Map\" component={Map}/>\r\n//           <Stack.Screen name=\"New_sign\" component={New_sign}></Stack.Screen>\r\n//           <Stack.Screen name=\"Contact\" component={Contact}></Stack.Screen>\r\n//           <Stack.Screen name=\"Speech\" component={Speech}></Stack.Screen>\r\n//           </Routes>\r\n          \r\n          \r\n//         </Stack.Navigator>\r\n//       </NavigationContainer>\r\n//     </TailwindProvider>\r\n\r\n    \r\n//   );\r\n// }\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// import { StatusBar } from \"expo-status-bar\";\r\n// import { SafeAreaView, Text, View } from \"react-native\";\r\n// import { TailwindProvider } from \"tailwindcss-react-native\";\r\n// import { NavigationContainer } from \"@react-navigation/native\";\r\n// import { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\n// import HomeScreen from \"./screens/HomeScreen\";\r\n// import Discover from \"./screens/Discover\";\r\n// import ItemScreen from \"./screens/ItemScreen\";\r\n// import Map from \"./screens/Map\";\r\n// import New from \"./screens/New\";\r\n// import Login from \"./screens/Login\";\r\n// import New_sign from \"./screens/New_sign\";\r\n// import Contact from \"./screens/Contact\";\r\n// import Speech from \"./screens/Speech\";\r\n// import { recognition } from \"./api/VoiceRecognization\";\r\n// import { useFocusEffect, useNavigation } from \"@react-navigation/native\"; // Import useNavigation hook\r\n\r\n// import { useLayoutEffect } from \"react\";\r\n// import { Navigate, useNavigate } from \"react-router-dom\";\r\n// import { useHistory } from \"react-router-dom\";\r\n// const Stack = createNativeStackNavigator();\r\n\r\n// export default function App() {\r\n//   console.log(recognition);\r\n//   recognition.start();\r\n\r\n//   const navigation = useNavigation(); // Use useNavigation hook at top level\r\n\r\n//   recognition.onresult = (event) => {\r\n//     const command = event.results[0][0].transcript;\r\n\r\n//     if (command.includes(\"navigate to\") || command.includes(\"go to\")) {\r\n//       if (command.includes(\"homepage\") || command.includes(\"indexpage\")) {\r\n//         navigateTo(\"Home\"); // Call navigateTo function\r\n//       } else if (command.includes(\"Discover\") || command.includes(\"Discover page\")) {\r\n//         navigateTo(\"Discover\"); // Call navigateTo function\r\n//       } else if (command.includes(\"Map\") || command.includes(\"Map page\")) {\r\n//         navigateTo(\"Map\"); // Call navigateTo function\r\n//       } else if (command.includes(\"Contact\") || command.includes(\"Contact page\")) {\r\n//         navigateTo(\"Contact\"); // Call navigateTo function\r\n//       } else if (command.includes(\"Sign up\") || command.includes(\"Sign up page\")) {\r\n//         navigateTo(\"New\"); // Call navigateTo function\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   recognition.onend = () => {\r\n//     recognition.start();\r\n//   };\r\n\r\n//   // Define navigateTo function\r\n//   const navigateTo =\r\n//     (navigation, screenName) => {\r\n//       navigation.navigate(screenName);\r\n//     }; // Use navigation object directly\r\n  \r\n\r\n//   return (\r\n//     <TailwindProvider>\r\n//       <NavigationContainer>\r\n//         <Stack.Navigator>\r\n//           <Stack.Screen name=\"Home\" component={HomeScreen} />\r\n//           <Stack.Screen name=\"Discover\" component={Discover} />\r\n//           <Stack.Screen name=\"ItemScreen\" component={ItemScreen} />\r\n//           <Stack.Screen name=\"New\" component={New}></Stack.Screen>\r\n//           <Stack.Screen name=\"Map\" component={Map} />\r\n//           <Stack.Screen name=\"New_sign\" component={New_sign}></Stack.Screen>\r\n//           <Stack.Screen name=\"Contact\" component={Contact}></Stack.Screen>\r\n//           <Stack.Screen name=\"Speech\" component={Speech}></Stack.Screen>\r\n//         </Stack.Navigator>\r\n//       </NavigationContainer>\r\n//     </TailwindProvider>\r\n//   );\r\n// }\r\n\r\n"],"mappings":""},"metadata":{},"sourceType":"script","externalDependencies":[]}