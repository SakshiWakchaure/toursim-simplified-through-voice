{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nvar _excluded = [\"onFocus\", \"onBlur\", \"onChangeText\", \"clearButtonMode\", \"InputComp\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport debounce from 'lodash.debounce';\nimport PropTypes from 'prop-types';\nimport Qs from 'qs';\nimport React, { forwardRef, useMemo, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar defaultStyles = {\n  container: {\n    flex: 1\n  },\n  textInputContainer: {\n    flexDirection: 'row'\n  },\n  textInput: {\n    backgroundColor: '#FFFFFF',\n    height: 44,\n    borderRadius: 5,\n    paddingVertical: 5,\n    paddingHorizontal: 10,\n    fontSize: 15,\n    flex: 1,\n    marginBottom: 5\n  },\n  listView: {},\n  row: {\n    backgroundColor: '#FFFFFF',\n    padding: 13,\n    minHeight: 44,\n    flexDirection: 'row'\n  },\n  loader: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    height: 20\n  },\n  description: {},\n  separator: {\n    height: StyleSheet.hairlineWidth,\n    backgroundColor: '#c8c7cc'\n  },\n  poweredContainer: {\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n    borderBottomRightRadius: 5,\n    borderBottomLeftRadius: 5,\n    borderColor: '#c8c7cc',\n    borderTopWidth: 0.5\n  },\n  powered: {}\n};\nexport var GooglePlacesAutocomplete = forwardRef(function (props, ref) {\n  var _results = [];\n  var _requests = [];\n  var hasNavigator = function hasNavigator() {\n    var _navigator;\n    if ((_navigator = navigator) != null && _navigator.geolocation) {\n      return true;\n    } else {\n      console.warn('If you are using React Native v0.60.0+ you must follow these instructions to enable currentLocation: https://git.io/Jf4AR');\n      return false;\n    }\n  };\n  var buildRowsFromResults = function buildRowsFromResults(results) {\n    var res = [];\n    if (results.length === 0 || props.predefinedPlacesAlwaysVisible === true) {\n      res = _toConsumableArray(props.predefinedPlaces.filter(function (place) {\n        return place == null ? void 0 : place.description.length;\n      }));\n      if (props.currentLocation === true && hasNavigator()) {\n        res.unshift({\n          description: props.currentLocationLabel,\n          isCurrentLocation: true\n        });\n      }\n    }\n    res = res.map(function (place) {\n      return _objectSpread(_objectSpread({}, place), {}, {\n        isPredefinedPlace: true\n      });\n    });\n    return [].concat(_toConsumableArray(res), _toConsumableArray(results));\n  };\n  var getRequestUrl = function getRequestUrl(requestUrl) {\n    if (requestUrl) {\n      if (requestUrl.useOnPlatform === 'all') {\n        return requestUrl.url;\n      }\n      if (requestUrl.useOnPlatform === 'web') {\n        return Platform.select({\n          web: requestUrl.url,\n          default: 'https://maps.googleapis.com/maps/api'\n        });\n      }\n    } else {\n      return 'https://maps.googleapis.com/maps/api';\n    }\n  };\n  var getRequestHeaders = function getRequestHeaders(requestUrl) {\n    return (requestUrl == null ? void 0 : requestUrl.headers) || {};\n  };\n  var setRequestHeaders = function setRequestHeaders(request, headers) {\n    Object.keys(headers).map(function (headerKey) {\n      return request.setRequestHeader(headerKey, headers[headerKey]);\n    });\n  };\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    stateText = _useState2[0],\n    setStateText = _useState2[1];\n  var _useState3 = useState(buildRowsFromResults([])),\n    _useState4 = _slicedToArray(_useState3, 2),\n    dataSource = _useState4[0],\n    setDataSource = _useState4[1];\n  var _useState5 = useState(props.listViewDisplayed === 'auto' ? false : props.listViewDisplayed),\n    _useState6 = _slicedToArray(_useState5, 2),\n    listViewDisplayed = _useState6[0],\n    setListViewDisplayed = _useState6[1];\n  var _useState7 = useState(getRequestUrl(props.requestUrl)),\n    _useState8 = _slicedToArray(_useState7, 1),\n    url = _useState8[0];\n  var inputRef = useRef();\n  useEffect(function () {\n    _handleChangeText(stateText);\n    return function () {\n      _abortRequests();\n    };\n  }, []);\n  useEffect(function () {\n    setDataSource(buildRowsFromResults([]));\n  }, [props.predefinedPlaces]);\n  useImperativeHandle(ref, function () {\n    return {\n      setAddressText: function setAddressText(address) {\n        setStateText(address);\n      },\n      getAddressText: function getAddressText() {\n        return stateText;\n      },\n      blur: function blur() {\n        return inputRef.current.blur();\n      },\n      focus: function focus() {\n        return inputRef.current.focus();\n      },\n      isFocused: function isFocused() {\n        return inputRef.current.isFocused();\n      },\n      clear: function clear() {\n        return inputRef.current.clear();\n      },\n      getCurrentLocation: getCurrentLocation\n    };\n  });\n  var requestShouldUseWithCredentials = function requestShouldUseWithCredentials() {\n    return url === 'https://maps.googleapis.com/maps/api';\n  };\n  var _abortRequests = function _abortRequests() {\n    _requests.map(function (i) {\n      return i.abort();\n    });\n    _requests = [];\n  };\n  var supportedPlatform = function supportedPlatform() {\n    if (Platform.OS === 'web' && !props.requestUrl) {\n      console.warn('This library cannot be used for the web unless you specify the requestUrl prop. See https://git.io/JflFv for more for details.');\n      return false;\n    } else {\n      return true;\n    }\n  };\n  var getCurrentLocation = function getCurrentLocation() {\n    var options = {\n      enableHighAccuracy: false,\n      timeout: 20000,\n      maximumAge: 1000\n    };\n    if (props.enableHighAccuracyLocation && Platform.OS === 'android') {\n      options = {\n        enableHighAccuracy: true,\n        timeout: 20000\n      };\n    }\n    var getCurrentPosition = navigator.geolocation.getCurrentPosition || navigator.geolocation.default.getCurrentPosition;\n    getCurrentPosition && getCurrentPosition(function (position) {\n      if (props.nearbyPlacesAPI === 'None') {\n        var currentLocation = {\n          description: props.currentLocationLabel,\n          geometry: {\n            location: {\n              lat: position.coords.latitude,\n              lng: position.coords.longitude\n            }\n          }\n        };\n        _disableRowLoaders();\n        props.onPress(currentLocation, currentLocation);\n      } else {\n        _requestNearby(position.coords.latitude, position.coords.longitude);\n      }\n    }, function (error) {\n      _disableRowLoaders();\n      console.error(error.message);\n    }, options);\n  };\n  var _onPress = function _onPress(rowData) {\n    if (rowData.isPredefinedPlace !== true && props.fetchDetails === true) {\n      if (rowData.isLoading === true) {\n        return;\n      }\n      Keyboard.dismiss();\n      _abortRequests();\n      _enableRowLoader(rowData);\n      var request = new XMLHttpRequest();\n      _requests.push(request);\n      request.timeout = props.timeout;\n      request.ontimeout = props.onTimeout;\n      request.onreadystatechange = function () {\n        if (request.readyState !== 4) return;\n        if (request.status === 200) {\n          var responseJSON = JSON.parse(request.responseText);\n          if (responseJSON.status === 'OK') {\n            var details = responseJSON.result;\n            _disableRowLoaders();\n            _onBlur();\n            setStateText(_renderDescription(rowData));\n            delete rowData.isLoading;\n            props.onPress(rowData, details);\n          } else {\n            _disableRowLoaders();\n            if (props.autoFillOnNotFound) {\n              setStateText(_renderDescription(rowData));\n              delete rowData.isLoading;\n            }\n            if (!props.onNotFound) {\n              console.warn('google places autocomplete: ' + responseJSON.status);\n            } else {\n              props.onNotFound(responseJSON);\n            }\n          }\n        } else {\n          _disableRowLoaders();\n          if (!props.onFail) {\n            console.warn('google places autocomplete: request could not be completed or has been aborted');\n          } else {\n            props.onFail('request could not be completed or has been aborted');\n          }\n        }\n      };\n      request.open('GET', url + \"/place/details/json?\" + Qs.stringify(_objectSpread({\n        key: props.query.key,\n        placeid: rowData.place_id,\n        language: props.query.language\n      }, props.GooglePlacesDetailsQuery)));\n      request.withCredentials = requestShouldUseWithCredentials();\n      setRequestHeaders(request, getRequestHeaders(props.requestUrl));\n      request.send();\n    } else if (rowData.isCurrentLocation === true) {\n      _enableRowLoader(rowData);\n      setStateText(_renderDescription(rowData));\n      delete rowData.isLoading;\n      getCurrentLocation();\n    } else {\n      setStateText(_renderDescription(rowData));\n      _onBlur();\n      delete rowData.isLoading;\n      var predefinedPlace = _getPredefinedPlace(rowData);\n      props.onPress(predefinedPlace, predefinedPlace);\n    }\n  };\n  var _enableRowLoader = function _enableRowLoader(rowData) {\n    var rows = buildRowsFromResults(_results);\n    for (var i = 0; i < rows.length; i++) {\n      if (rows[i].place_id === rowData.place_id || rows[i].isCurrentLocation === true && rowData.isCurrentLocation === true) {\n        rows[i].isLoading = true;\n        setDataSource(rows);\n        break;\n      }\n    }\n  };\n  var _disableRowLoaders = function _disableRowLoaders() {\n    for (var i = 0; i < _results.length; i++) {\n      if (_results[i].isLoading === true) {\n        _results[i].isLoading = false;\n      }\n    }\n    setDataSource(buildRowsFromResults(_results));\n  };\n  var _getPredefinedPlace = function _getPredefinedPlace(rowData) {\n    if (rowData.isPredefinedPlace !== true) {\n      return rowData;\n    }\n    for (var i = 0; i < props.predefinedPlaces.length; i++) {\n      if (props.predefinedPlaces[i].description === rowData.description) {\n        return props.predefinedPlaces[i];\n      }\n    }\n    return rowData;\n  };\n  var _filterResultsByTypes = function _filterResultsByTypes(unfilteredResults, types) {\n    if (types.length === 0) return unfilteredResults;\n    var results = [];\n    for (var i = 0; i < unfilteredResults.length; i++) {\n      var found = false;\n      for (var j = 0; j < types.length; j++) {\n        if (unfilteredResults[i].types.indexOf(types[j]) !== -1) {\n          found = true;\n          break;\n        }\n      }\n      if (found === true) {\n        results.push(unfilteredResults[i]);\n      }\n    }\n    return results;\n  };\n  var _requestNearby = function _requestNearby(latitude, longitude) {\n    _abortRequests();\n    if (latitude !== undefined && longitude !== undefined && latitude !== null && longitude !== null) {\n      var request = new XMLHttpRequest();\n      _requests.push(request);\n      request.timeout = props.timeout;\n      request.ontimeout = props.onTimeout;\n      request.onreadystatechange = function () {\n        if (request.readyState !== 4) {\n          return;\n        }\n        if (request.status === 200) {\n          var responseJSON = JSON.parse(request.responseText);\n          _disableRowLoaders();\n          if (typeof responseJSON.results !== 'undefined') {\n            var results = [];\n            if (props.nearbyPlacesAPI === 'GoogleReverseGeocoding') {\n              results = _filterResultsByTypes(responseJSON.results, props.filterReverseGeocodingByTypes);\n            } else {\n              results = responseJSON.results;\n            }\n            setDataSource(buildRowsFromResults(results));\n          }\n          if (typeof responseJSON.error_message !== 'undefined') {\n            if (!props.onFail) console.warn('google places autocomplete: ' + responseJSON.error_message);else {\n              props.onFail(responseJSON.error_message);\n            }\n          }\n        } else {}\n      };\n      var requestUrl = '';\n      if (props.nearbyPlacesAPI === 'GoogleReverseGeocoding') {\n        requestUrl = url + \"/geocode/json?\" + Qs.stringify(_objectSpread({\n          latlng: latitude + ',' + longitude,\n          key: props.query.key\n        }, props.GoogleReverseGeocodingQuery));\n      } else {\n        requestUrl = url + \"/place/nearbysearch/json?\" + Qs.stringify(_objectSpread({\n          location: latitude + ',' + longitude,\n          key: props.query.key\n        }, props.GooglePlacesSearchQuery));\n      }\n      request.open('GET', requestUrl);\n      request.withCredentials = requestShouldUseWithCredentials();\n      setRequestHeaders(request, getRequestHeaders(props.requestUrl));\n      request.send();\n    } else {\n      _results = [];\n      setDataSource(buildRowsFromResults([]));\n    }\n  };\n  var _request = function _request(text) {\n    _abortRequests();\n    if (supportedPlatform() && text && text.length >= props.minLength) {\n      var request = new XMLHttpRequest();\n      _requests.push(request);\n      request.timeout = props.timeout;\n      request.ontimeout = props.onTimeout;\n      request.onreadystatechange = function () {\n        if (request.readyState !== 4) {\n          return;\n        }\n        if (request.status === 200) {\n          var responseJSON = JSON.parse(request.responseText);\n          if (typeof responseJSON.predictions !== 'undefined') {\n            var results = props.nearbyPlacesAPI === 'GoogleReverseGeocoding' ? _filterResultsByTypes(responseJSON.predictions, props.filterReverseGeocodingByTypes) : responseJSON.predictions;\n            _results = results;\n            setDataSource(buildRowsFromResults(results));\n          }\n          if (typeof responseJSON.error_message !== 'undefined') {\n            if (!props.onFail) console.warn('google places autocomplete: ' + responseJSON.error_message);else {\n              props.onFail(responseJSON.error_message);\n            }\n          }\n        } else {}\n      };\n      if (props.preProcess) {\n        setStateText(props.preProcess(text));\n      }\n      request.open('GET', url + \"/place/autocomplete/json?input=\" + encodeURIComponent(text) + '&' + Qs.stringify(props.query));\n      request.withCredentials = requestShouldUseWithCredentials();\n      setRequestHeaders(request, getRequestHeaders(props.requestUrl));\n      request.send();\n    } else {\n      _results = [];\n      setDataSource(buildRowsFromResults([]));\n    }\n  };\n  var debounceData = useMemo(function () {\n    return debounce(_request, props.debounce);\n  }, [props.query]);\n  var _onChangeText = function _onChangeText(text) {\n    setStateText(text);\n    debounceData(text);\n  };\n  var _handleChangeText = function _handleChangeText(text) {\n    var _props$textInputProps;\n    _onChangeText(text);\n    var onChangeText = props == null ? void 0 : (_props$textInputProps = props.textInputProps) == null ? void 0 : _props$textInputProps.onChangeText;\n    if (onChangeText) {\n      onChangeText(text);\n    }\n  };\n  var _getRowLoader = function _getRowLoader() {\n    return _jsx(ActivityIndicator, {\n      animating: true,\n      size: \"small\"\n    });\n  };\n  var _renderRowData = function _renderRowData(rowData, index) {\n    if (props.renderRow) {\n      return props.renderRow(rowData, index);\n    }\n    return _jsx(Text, {\n      style: [props.suppressDefaultStyles ? {} : defaultStyles.description, props.styles.description, rowData.isPredefinedPlace ? props.styles.predefinedPlacesDescription : {}],\n      numberOfLines: props.numberOfLines,\n      children: _renderDescription(rowData)\n    });\n  };\n  var _renderDescription = function _renderDescription(rowData) {\n    if (props.renderDescription) {\n      return props.renderDescription(rowData);\n    }\n    return rowData.description || rowData.formatted_address || rowData.name;\n  };\n  var _renderLoader = function _renderLoader(rowData) {\n    if (rowData.isLoading === true) {\n      return _jsx(View, {\n        style: [props.suppressDefaultStyles ? {} : defaultStyles.loader, props.styles.loader],\n        children: _getRowLoader()\n      });\n    }\n    return null;\n  };\n  var _renderRow = function _renderRow() {\n    var rowData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var index = arguments.length > 1 ? arguments[1] : undefined;\n    return _jsx(ScrollView, {\n      contentContainerStyle: props.isRowScrollable ? {\n        minWidth: '100%'\n      } : {\n        width: '100%'\n      },\n      scrollEnabled: props.isRowScrollable,\n      keyboardShouldPersistTaps: props.keyboardShouldPersistTaps,\n      horizontal: true,\n      showsHorizontalScrollIndicator: false,\n      showsVerticalScrollIndicator: false,\n      children: _jsx(TouchableHighlight, {\n        style: props.isRowScrollable ? {\n          minWidth: '100%'\n        } : {\n          width: '100%'\n        },\n        onPress: function onPress() {\n          return _onPress(rowData);\n        },\n        underlayColor: props.listUnderlayColor || '#c8c7cc',\n        children: _jsxs(View, {\n          style: [props.suppressDefaultStyles ? {} : defaultStyles.row, props.styles.row, rowData.isPredefinedPlace ? props.styles.specialItemRow : {}],\n          children: [_renderLoader(rowData), _renderRowData(rowData, index)]\n        })\n      })\n    });\n  };\n  var _renderSeparator = function _renderSeparator(sectionID, rowID) {\n    if (rowID === dataSource.length - 1) {\n      return null;\n    }\n    return _jsx(View, {\n      style: [props.suppressDefaultStyles ? {} : defaultStyles.separator, props.styles.separator]\n    }, sectionID + \"-\" + rowID);\n  };\n  var isNewFocusInAutocompleteResultList = function isNewFocusInAutocompleteResultList(_ref) {\n    var relatedTarget = _ref.relatedTarget,\n      currentTarget = _ref.currentTarget;\n    if (!relatedTarget) return false;\n    var node = relatedTarget.parentNode;\n    while (node) {\n      if (node.id === 'result-list-id') return true;\n      node = node.parentNode;\n    }\n    return false;\n  };\n  var _onBlur = function _onBlur(e) {\n    var _inputRef$current;\n    if (e && isNewFocusInAutocompleteResultList(e)) return;\n    if (!props.keepResultsAfterBlur) {\n      setListViewDisplayed(false);\n    }\n    inputRef == null ? void 0 : (_inputRef$current = inputRef.current) == null ? void 0 : _inputRef$current.blur();\n  };\n  var _onFocus = function _onFocus() {\n    return setListViewDisplayed(true);\n  };\n  var _renderPoweredLogo = function _renderPoweredLogo() {\n    if (!_shouldShowPoweredLogo()) {\n      return null;\n    }\n    return _jsx(View, {\n      style: [props.suppressDefaultStyles ? {} : defaultStyles.row, defaultStyles.poweredContainer, props.styles.poweredContainer],\n      children: _jsx(Image, {\n        style: [props.suppressDefaultStyles ? {} : defaultStyles.powered, props.styles.powered],\n        resizeMode: \"contain\",\n        source: require(\"./images/powered_by_google_on_white.png\")\n      })\n    });\n  };\n  var _shouldShowPoweredLogo = function _shouldShowPoweredLogo() {\n    if (!props.enablePoweredByContainer || dataSource.length === 0) {\n      return false;\n    }\n    for (var i = 0; i < dataSource.length; i++) {\n      var row = dataSource[i];\n      if (!row.hasOwnProperty('isCurrentLocation') && !row.hasOwnProperty('isPredefinedPlace')) {\n        return true;\n      }\n    }\n    return false;\n  };\n  var _renderLeftButton = function _renderLeftButton() {\n    if (props.renderLeftButton) {\n      return props.renderLeftButton();\n    }\n  };\n  var _renderRightButton = function _renderRightButton() {\n    if (props.renderRightButton) {\n      return props.renderRightButton();\n    }\n  };\n  var _getFlatList = function _getFlatList() {\n    var keyGenerator = function keyGenerator() {\n      return Math.random().toString(36).substr(2, 10);\n    };\n    if (supportedPlatform() && (stateText !== '' || props.predefinedPlaces.length > 0 || props.currentLocation === true) && listViewDisplayed === true) {\n      return _jsx(FlatList, _objectSpread({\n        nativeID: \"result-list-id\",\n        scrollEnabled: !props.disableScroll,\n        style: [props.suppressDefaultStyles ? {} : defaultStyles.listView, props.styles.listView],\n        data: dataSource,\n        keyExtractor: keyGenerator,\n        extraData: [dataSource, props],\n        ItemSeparatorComponent: _renderSeparator,\n        renderItem: function renderItem(_ref2) {\n          var item = _ref2.item,\n            index = _ref2.index;\n          return _renderRow(item, index);\n        },\n        ListEmptyComponent: stateText.length > props.minLength && props.listEmptyComponent,\n        ListHeaderComponent: props.renderHeaderComponent && props.renderHeaderComponent(stateText),\n        ListFooterComponent: _renderPoweredLogo\n      }, props));\n    }\n    return null;\n  };\n  var _props$textInputProps2 = props.textInputProps,\n    onFocus = _props$textInputProps2.onFocus,\n    onBlur = _props$textInputProps2.onBlur,\n    onChangeText = _props$textInputProps2.onChangeText,\n    clearButtonMode = _props$textInputProps2.clearButtonMode,\n    InputComp = _props$textInputProps2.InputComp,\n    userProps = _objectWithoutProperties(_props$textInputProps2, _excluded);\n  var TextInputComp = InputComp || TextInput;\n  return _jsxs(View, {\n    style: [props.suppressDefaultStyles ? {} : defaultStyles.container, props.styles.container],\n    pointerEvents: \"box-none\",\n    children: [!props.textInputHide && _jsxs(View, {\n      style: [props.suppressDefaultStyles ? {} : defaultStyles.textInputContainer, props.styles.textInputContainer],\n      children: [_renderLeftButton(), _jsx(TextInputComp, _objectSpread({\n        ref: inputRef,\n        style: [props.suppressDefaultStyles ? {} : defaultStyles.textInput, props.styles.textInput],\n        value: stateText,\n        placeholder: props.placeholder,\n        onFocus: onFocus ? function (e) {\n          _onFocus();\n          onFocus(e);\n        } : _onFocus,\n        onBlur: onBlur ? function (e) {\n          _onBlur(e);\n          onBlur(e);\n        } : _onBlur,\n        clearButtonMode: clearButtonMode || 'while-editing',\n        onChangeText: _handleChangeText\n      }, userProps)), _renderRightButton()]\n    }), props.inbetweenCompo, _getFlatList(), props.children]\n  });\n});\nGooglePlacesAutocomplete.propTypes = {\n  autoFillOnNotFound: PropTypes.bool,\n  currentLocation: PropTypes.bool,\n  currentLocationLabel: PropTypes.string,\n  debounce: PropTypes.number,\n  disableScroll: PropTypes.bool,\n  enableHighAccuracyLocation: PropTypes.bool,\n  enablePoweredByContainer: PropTypes.bool,\n  fetchDetails: PropTypes.bool,\n  filterReverseGeocodingByTypes: PropTypes.array,\n  GooglePlacesDetailsQuery: PropTypes.object,\n  GooglePlacesSearchQuery: PropTypes.object,\n  GoogleReverseGeocodingQuery: PropTypes.object,\n  inbetweenCompo: PropTypes.object,\n  isRowScrollable: PropTypes.bool,\n  keyboardShouldPersistTaps: PropTypes.oneOf(['never', 'always', 'handled']),\n  listEmptyComponent: PropTypes.func,\n  listUnderlayColor: PropTypes.string,\n  listViewDisplayed: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['auto'])]),\n  keepResultsAfterBlur: PropTypes.bool,\n  minLength: PropTypes.number,\n  nearbyPlacesAPI: PropTypes.string,\n  numberOfLines: PropTypes.number,\n  onFail: PropTypes.func,\n  onNotFound: PropTypes.func,\n  onPress: PropTypes.func,\n  onTimeout: PropTypes.func,\n  placeholder: PropTypes.string,\n  predefinedPlaces: PropTypes.array,\n  predefinedPlacesAlwaysVisible: PropTypes.bool,\n  preProcess: PropTypes.func,\n  query: PropTypes.object,\n  renderDescription: PropTypes.func,\n  renderHeaderComponent: PropTypes.func,\n  renderLeftButton: PropTypes.func,\n  renderRightButton: PropTypes.func,\n  renderRow: PropTypes.func,\n  requestUrl: PropTypes.shape({\n    url: PropTypes.string,\n    useOnPlatform: PropTypes.oneOf(['web', 'all']),\n    headers: PropTypes.objectOf(PropTypes.string)\n  }),\n  styles: PropTypes.object,\n  suppressDefaultStyles: PropTypes.bool,\n  textInputHide: PropTypes.bool,\n  textInputProps: PropTypes.object,\n  timeout: PropTypes.number\n};\nGooglePlacesAutocomplete.defaultProps = {\n  autoFillOnNotFound: false,\n  currentLocation: false,\n  currentLocationLabel: 'Current location',\n  debounce: 0,\n  disableScroll: false,\n  enableHighAccuracyLocation: true,\n  enablePoweredByContainer: true,\n  fetchDetails: false,\n  filterReverseGeocodingByTypes: [],\n  GooglePlacesDetailsQuery: {},\n  GooglePlacesSearchQuery: {\n    rankby: 'distance',\n    type: 'restaurant'\n  },\n  GoogleReverseGeocodingQuery: {},\n  isRowScrollable: true,\n  keyboardShouldPersistTaps: 'always',\n  listUnderlayColor: '#c8c7cc',\n  listViewDisplayed: 'auto',\n  keepResultsAfterBlur: false,\n  minLength: 0,\n  nearbyPlacesAPI: 'GooglePlacesSearch',\n  numberOfLines: 1,\n  onFail: function onFail() {},\n  onNotFound: function onNotFound() {},\n  onPress: function onPress() {},\n  onTimeout: function onTimeout() {\n    return console.warn('google places autocomplete: request timeout');\n  },\n  placeholder: '',\n  predefinedPlaces: [],\n  predefinedPlacesAlwaysVisible: false,\n  query: {\n    key: 'missing api key',\n    language: 'en',\n    types: 'geocode'\n  },\n  styles: {},\n  suppressDefaultStyles: false,\n  textInputHide: false,\n  textInputProps: {},\n  timeout: 20000\n};\nexport default {\n  GooglePlacesAutocomplete: GooglePlacesAutocomplete\n};","map":{"version":3,"names":["debounce","PropTypes","Qs","React","forwardRef","useMemo","useEffect","useImperativeHandle","useRef","useState","ActivityIndicator","FlatList","Image","Keyboard","Platform","ScrollView","StyleSheet","Text","TextInput","TouchableHighlight","View","jsx","_jsx","jsxs","_jsxs","defaultStyles","container","flex","textInputContainer","flexDirection","textInput","backgroundColor","height","borderRadius","paddingVertical","paddingHorizontal","fontSize","marginBottom","listView","row","padding","minHeight","loader","justifyContent","description","separator","hairlineWidth","poweredContainer","alignItems","borderBottomRightRadius","borderBottomLeftRadius","borderColor","borderTopWidth","powered","GooglePlacesAutocomplete","props","ref","_results","_requests","hasNavigator","_navigator","navigator","geolocation","console","warn","buildRowsFromResults","results","res","length","predefinedPlacesAlwaysVisible","_toConsumableArray","predefinedPlaces","filter","place","currentLocation","unshift","currentLocationLabel","isCurrentLocation","map","_objectSpread","isPredefinedPlace","concat","getRequestUrl","requestUrl","useOnPlatform","url","select","web","default","getRequestHeaders","headers","setRequestHeaders","request","Object","keys","headerKey","setRequestHeader","_useState","_useState2","_slicedToArray","stateText","setStateText","_useState3","_useState4","dataSource","setDataSource","_useState5","listViewDisplayed","_useState6","setListViewDisplayed","_useState7","_useState8","inputRef","_handleChangeText","_abortRequests","setAddressText","address","getAddressText","blur","current","focus","isFocused","clear","getCurrentLocation","requestShouldUseWithCredentials","i","abort","supportedPlatform","OS","options","enableHighAccuracy","timeout","maximumAge","enableHighAccuracyLocation","getCurrentPosition","position","nearbyPlacesAPI","geometry","location","lat","coords","latitude","lng","longitude","_disableRowLoaders","onPress","_requestNearby","error","message","_onPress","rowData","fetchDetails","isLoading","dismiss","_enableRowLoader","XMLHttpRequest","push","ontimeout","onTimeout","onreadystatechange","readyState","status","responseJSON","JSON","parse","responseText","details","result","_onBlur","_renderDescription","autoFillOnNotFound","onNotFound","onFail","open","stringify","key","query","placeid","place_id","language","GooglePlacesDetailsQuery","withCredentials","send","predefinedPlace","_getPredefinedPlace","rows","_filterResultsByTypes","unfilteredResults","types","found","j","indexOf","undefined","filterReverseGeocodingByTypes","error_message","latlng","GoogleReverseGeocodingQuery","GooglePlacesSearchQuery","_request","text","minLength","predictions","preProcess","encodeURIComponent","debounceData","_onChangeText","_props$textInputProps","onChangeText","textInputProps","_getRowLoader","animating","size","_renderRowData","index","renderRow","style","suppressDefaultStyles","styles","predefinedPlacesDescription","numberOfLines","children","renderDescription","formatted_address","name","_renderLoader","_renderRow","arguments","contentContainerStyle","isRowScrollable","minWidth","width","scrollEnabled","keyboardShouldPersistTaps","horizontal","showsHorizontalScrollIndicator","showsVerticalScrollIndicator","underlayColor","listUnderlayColor","specialItemRow","_renderSeparator","sectionID","rowID","isNewFocusInAutocompleteResultList","_ref","relatedTarget","currentTarget","node","parentNode","id","e","_inputRef$current","keepResultsAfterBlur","_onFocus","_renderPoweredLogo","_shouldShowPoweredLogo","resizeMode","source","require","enablePoweredByContainer","hasOwnProperty","_renderLeftButton","renderLeftButton","_renderRightButton","renderRightButton","_getFlatList","keyGenerator","Math","random","toString","substr","nativeID","disableScroll","data","keyExtractor","extraData","ItemSeparatorComponent","renderItem","_ref2","item","ListEmptyComponent","listEmptyComponent","ListHeaderComponent","renderHeaderComponent","ListFooterComponent","_props$textInputProps2","onFocus","onBlur","clearButtonMode","InputComp","userProps","_objectWithoutProperties","_excluded","TextInputComp","pointerEvents","textInputHide","value","placeholder","inbetweenCompo","propTypes","bool","string","number","array","object","oneOf","func","oneOfType","shape","objectOf","defaultProps","rankby","type"],"sources":["D:/xampp/htdocs/gotravel1/tourism simplified through voice/node_modules/react-native-google-places-autocomplete/GooglePlacesAutocomplete.js"],"sourcesContent":["/* eslint-disable react-native/no-inline-styles */\nimport debounce from 'lodash.debounce';\nimport PropTypes from 'prop-types';\nimport Qs from 'qs';\nimport React, {\n  forwardRef,\n  useMemo,\n  useEffect,\n  useImperativeHandle,\n  useRef,\n  useState,\n} from 'react';\nimport {\n  ActivityIndicator,\n  FlatList,\n  Image,\n  Keyboard,\n  Platform,\n  ScrollView,\n  StyleSheet,\n  Text,\n  TextInput,\n  TouchableHighlight,\n  View,\n} from 'react-native';\n\nconst defaultStyles = {\n  container: {\n    flex: 1,\n  },\n  textInputContainer: {\n    flexDirection: 'row',\n  },\n  textInput: {\n    backgroundColor: '#FFFFFF',\n    height: 44,\n    borderRadius: 5,\n    paddingVertical: 5,\n    paddingHorizontal: 10,\n    fontSize: 15,\n    flex: 1,\n    marginBottom: 5,\n  },\n  listView: {},\n  row: {\n    backgroundColor: '#FFFFFF',\n    padding: 13,\n    minHeight: 44,\n    flexDirection: 'row',\n  },\n  loader: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    height: 20,\n  },\n  description: {},\n  separator: {\n    height: StyleSheet.hairlineWidth,\n    backgroundColor: '#c8c7cc',\n  },\n  poweredContainer: {\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n    borderBottomRightRadius: 5,\n    borderBottomLeftRadius: 5,\n    borderColor: '#c8c7cc',\n    borderTopWidth: 0.5,\n  },\n  powered: {},\n};\n\nexport const GooglePlacesAutocomplete = forwardRef((props, ref) => {\n  let _results = [];\n  let _requests = [];\n\n  const hasNavigator = () => {\n    if (navigator?.geolocation) {\n      return true;\n    } else {\n      console.warn(\n        'If you are using React Native v0.60.0+ you must follow these instructions to enable currentLocation: https://git.io/Jf4AR',\n      );\n      return false;\n    }\n  };\n\n  const buildRowsFromResults = (results) => {\n    let res = [];\n\n    if (results.length === 0 || props.predefinedPlacesAlwaysVisible === true) {\n      res = [\n        ...props.predefinedPlaces.filter((place) => place?.description.length),\n      ];\n\n      if (props.currentLocation === true && hasNavigator()) {\n        res.unshift({\n          description: props.currentLocationLabel,\n          isCurrentLocation: true,\n        });\n      }\n    }\n\n    res = res.map((place) => ({\n      ...place,\n      isPredefinedPlace: true,\n    }));\n\n    return [...res, ...results];\n  };\n\n  const getRequestUrl = (requestUrl) => {\n    if (requestUrl) {\n      if (requestUrl.useOnPlatform === 'all') {\n        return requestUrl.url;\n      }\n      if (requestUrl.useOnPlatform === 'web') {\n        return Platform.select({\n          web: requestUrl.url,\n          default: 'https://maps.googleapis.com/maps/api',\n        });\n      }\n    } else {\n      return 'https://maps.googleapis.com/maps/api';\n    }\n  };\n\n  const getRequestHeaders = (requestUrl) => {\n    return requestUrl?.headers || {};\n  };\n\n  const setRequestHeaders = (request, headers) => {\n    Object.keys(headers).map((headerKey) =>\n      request.setRequestHeader(headerKey, headers[headerKey]),\n    );\n  };\n\n  const [stateText, setStateText] = useState('');\n  const [dataSource, setDataSource] = useState(buildRowsFromResults([]));\n  const [listViewDisplayed, setListViewDisplayed] = useState(\n    props.listViewDisplayed === 'auto' ? false : props.listViewDisplayed,\n  );\n  const [url] = useState(getRequestUrl(props.requestUrl));\n\n  const inputRef = useRef();\n\n  useEffect(() => {\n    // This will load the default value's search results after the view has\n    // been rendered\n    _handleChangeText(stateText);\n    return () => {\n      _abortRequests();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    // Update dataSource if props.predefinedPlaces changed\n    setDataSource(buildRowsFromResults([]));\n  }, [props.predefinedPlaces]);\n\n  useImperativeHandle(ref, () => ({\n    setAddressText: (address) => {\n      setStateText(address);\n    },\n    getAddressText: () => stateText,\n    blur: () => inputRef.current.blur(),\n    focus: () => inputRef.current.focus(),\n    isFocused: () => inputRef.current.isFocused(),\n    clear: () => inputRef.current.clear(),\n    getCurrentLocation,\n  }));\n\n  const requestShouldUseWithCredentials = () =>\n    url === 'https://maps.googleapis.com/maps/api';\n\n  const _abortRequests = () => {\n    _requests.map((i) => i.abort());\n    _requests = [];\n  };\n\n  const supportedPlatform = () => {\n    if (Platform.OS === 'web' && !props.requestUrl) {\n      console.warn(\n        'This library cannot be used for the web unless you specify the requestUrl prop. See https://git.io/JflFv for more for details.',\n      );\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  const getCurrentLocation = () => {\n    let options = {\n      enableHighAccuracy: false,\n      timeout: 20000,\n      maximumAge: 1000,\n    };\n\n    if (props.enableHighAccuracyLocation && Platform.OS === 'android') {\n      options = {\n        enableHighAccuracy: true,\n        timeout: 20000,\n      };\n    }\n    const getCurrentPosition =\n      navigator.geolocation.getCurrentPosition ||\n      navigator.geolocation.default.getCurrentPosition;\n\n    getCurrentPosition &&\n      getCurrentPosition(\n        (position) => {\n          if (props.nearbyPlacesAPI === 'None') {\n            let currentLocation = {\n              description: props.currentLocationLabel,\n              geometry: {\n                location: {\n                  lat: position.coords.latitude,\n                  lng: position.coords.longitude,\n                },\n              },\n            };\n\n            _disableRowLoaders();\n            props.onPress(currentLocation, currentLocation);\n          } else {\n            _requestNearby(position.coords.latitude, position.coords.longitude);\n          }\n        },\n        (error) => {\n          _disableRowLoaders();\n          console.error(error.message);\n        },\n        options,\n      );\n  };\n\n  const _onPress = (rowData) => {\n    if (rowData.isPredefinedPlace !== true && props.fetchDetails === true) {\n      if (rowData.isLoading === true) {\n        // already requesting\n        return;\n      }\n\n      Keyboard.dismiss();\n\n      _abortRequests();\n\n      // display loader\n      _enableRowLoader(rowData);\n\n      // fetch details\n      const request = new XMLHttpRequest();\n      _requests.push(request);\n      request.timeout = props.timeout;\n      request.ontimeout = props.onTimeout;\n      request.onreadystatechange = () => {\n        if (request.readyState !== 4) return;\n\n        if (request.status === 200) {\n          const responseJSON = JSON.parse(request.responseText);\n\n          if (responseJSON.status === 'OK') {\n            // if (_isMounted === true) {\n            const details = responseJSON.result;\n            _disableRowLoaders();\n            _onBlur();\n\n            setStateText(_renderDescription(rowData));\n\n            delete rowData.isLoading;\n            props.onPress(rowData, details);\n            // }\n          } else {\n            _disableRowLoaders();\n\n            if (props.autoFillOnNotFound) {\n              setStateText(_renderDescription(rowData));\n              delete rowData.isLoading;\n            }\n\n            if (!props.onNotFound) {\n              console.warn(\n                'google places autocomplete: ' + responseJSON.status,\n              );\n            } else {\n              props.onNotFound(responseJSON);\n            }\n          }\n        } else {\n          _disableRowLoaders();\n\n          if (!props.onFail) {\n            console.warn(\n              'google places autocomplete: request could not be completed or has been aborted',\n            );\n          } else {\n            props.onFail('request could not be completed or has been aborted');\n          }\n        }\n      };\n\n      request.open(\n        'GET',\n        `${url}/place/details/json?` +\n          Qs.stringify({\n            key: props.query.key,\n            placeid: rowData.place_id,\n            language: props.query.language,\n            ...props.GooglePlacesDetailsQuery,\n          }),\n      );\n\n      request.withCredentials = requestShouldUseWithCredentials();\n      setRequestHeaders(request, getRequestHeaders(props.requestUrl));\n\n      request.send();\n    } else if (rowData.isCurrentLocation === true) {\n      // display loader\n      _enableRowLoader(rowData);\n\n      setStateText(_renderDescription(rowData));\n\n      delete rowData.isLoading;\n      getCurrentLocation();\n    } else {\n      setStateText(_renderDescription(rowData));\n\n      _onBlur();\n      delete rowData.isLoading;\n      let predefinedPlace = _getPredefinedPlace(rowData);\n\n      // sending predefinedPlace as details for predefined places\n      props.onPress(predefinedPlace, predefinedPlace);\n    }\n  };\n\n  const _enableRowLoader = (rowData) => {\n    let rows = buildRowsFromResults(_results);\n    for (let i = 0; i < rows.length; i++) {\n      if (\n        rows[i].place_id === rowData.place_id ||\n        (rows[i].isCurrentLocation === true &&\n          rowData.isCurrentLocation === true)\n      ) {\n        rows[i].isLoading = true;\n        setDataSource(rows);\n        break;\n      }\n    }\n  };\n\n  const _disableRowLoaders = () => {\n    // if (_isMounted === true) {\n    for (let i = 0; i < _results.length; i++) {\n      if (_results[i].isLoading === true) {\n        _results[i].isLoading = false;\n      }\n    }\n\n    setDataSource(buildRowsFromResults(_results));\n    // }\n  };\n\n  const _getPredefinedPlace = (rowData) => {\n    if (rowData.isPredefinedPlace !== true) {\n      return rowData;\n    }\n\n    for (let i = 0; i < props.predefinedPlaces.length; i++) {\n      if (props.predefinedPlaces[i].description === rowData.description) {\n        return props.predefinedPlaces[i];\n      }\n    }\n\n    return rowData;\n  };\n\n  const _filterResultsByTypes = (unfilteredResults, types) => {\n    if (types.length === 0) return unfilteredResults;\n\n    const results = [];\n    for (let i = 0; i < unfilteredResults.length; i++) {\n      let found = false;\n\n      for (let j = 0; j < types.length; j++) {\n        if (unfilteredResults[i].types.indexOf(types[j]) !== -1) {\n          found = true;\n          break;\n        }\n      }\n\n      if (found === true) {\n        results.push(unfilteredResults[i]);\n      }\n    }\n    return results;\n  };\n\n  const _requestNearby = (latitude, longitude) => {\n    _abortRequests();\n\n    if (\n      latitude !== undefined &&\n      longitude !== undefined &&\n      latitude !== null &&\n      longitude !== null\n    ) {\n      const request = new XMLHttpRequest();\n      _requests.push(request);\n      request.timeout = props.timeout;\n      request.ontimeout = props.onTimeout;\n      request.onreadystatechange = () => {\n        if (request.readyState !== 4) {\n          return;\n        }\n\n        if (request.status === 200) {\n          const responseJSON = JSON.parse(request.responseText);\n\n          _disableRowLoaders();\n\n          if (typeof responseJSON.results !== 'undefined') {\n            // if (_isMounted === true) {\n            var results = [];\n            if (props.nearbyPlacesAPI === 'GoogleReverseGeocoding') {\n              results = _filterResultsByTypes(\n                responseJSON.results,\n                props.filterReverseGeocodingByTypes,\n              );\n            } else {\n              results = responseJSON.results;\n            }\n\n            setDataSource(buildRowsFromResults(results));\n            // }\n          }\n          if (typeof responseJSON.error_message !== 'undefined') {\n            if (!props.onFail)\n              console.warn(\n                'google places autocomplete: ' + responseJSON.error_message,\n              );\n            else {\n              props.onFail(responseJSON.error_message);\n            }\n          }\n        } else {\n          // console.warn(\"google places autocomplete: request could not be completed or has been aborted\");\n        }\n      };\n\n      let requestUrl = '';\n      if (props.nearbyPlacesAPI === 'GoogleReverseGeocoding') {\n        // your key must be allowed to use Google Maps Geocoding API\n        requestUrl =\n          `${url}/geocode/json?` +\n          Qs.stringify({\n            latlng: latitude + ',' + longitude,\n            key: props.query.key,\n            ...props.GoogleReverseGeocodingQuery,\n          });\n      } else {\n        requestUrl =\n          `${url}/place/nearbysearch/json?` +\n          Qs.stringify({\n            location: latitude + ',' + longitude,\n            key: props.query.key,\n            ...props.GooglePlacesSearchQuery,\n          });\n      }\n\n      request.open('GET', requestUrl);\n\n      request.withCredentials = requestShouldUseWithCredentials();\n      setRequestHeaders(request, getRequestHeaders(props.requestUrl));\n\n      request.send();\n    } else {\n      _results = [];\n      setDataSource(buildRowsFromResults([]));\n    }\n  };\n\n  const _request = (text) => {\n    _abortRequests();\n    if (supportedPlatform() && text && text.length >= props.minLength) {\n      const request = new XMLHttpRequest();\n      _requests.push(request);\n      request.timeout = props.timeout;\n      request.ontimeout = props.onTimeout;\n      request.onreadystatechange = () => {\n        if (request.readyState !== 4) {\n          return;\n        }\n\n        if (request.status === 200) {\n          const responseJSON = JSON.parse(request.responseText);\n          if (typeof responseJSON.predictions !== 'undefined') {\n            // if (_isMounted === true) {\n            const results =\n              props.nearbyPlacesAPI === 'GoogleReverseGeocoding'\n                ? _filterResultsByTypes(\n                    responseJSON.predictions,\n                    props.filterReverseGeocodingByTypes,\n                  )\n                : responseJSON.predictions;\n\n            _results = results;\n            setDataSource(buildRowsFromResults(results));\n            // }\n          }\n          if (typeof responseJSON.error_message !== 'undefined') {\n            if (!props.onFail)\n              console.warn(\n                'google places autocomplete: ' + responseJSON.error_message,\n              );\n            else {\n              props.onFail(responseJSON.error_message);\n            }\n          }\n        } else {\n          // console.warn(\"google places autocomplete: request could not be completed or has been aborted\");\n        }\n      };\n\n      if (props.preProcess) {\n        setStateText(props.preProcess(text));\n      }\n\n      request.open(\n        'GET',\n        `${url}/place/autocomplete/json?input=` +\n          encodeURIComponent(text) +\n          '&' +\n          Qs.stringify(props.query),\n      );\n\n      request.withCredentials = requestShouldUseWithCredentials();\n      setRequestHeaders(request, getRequestHeaders(props.requestUrl));\n\n      request.send();\n    } else {\n      _results = [];\n      setDataSource(buildRowsFromResults([]));\n    }\n  };\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const debounceData = useMemo(() => debounce(_request, props.debounce), [\n    props.query,\n  ]);\n\n  const _onChangeText = (text) => {\n    setStateText(text);\n    debounceData(text);\n  };\n\n  const _handleChangeText = (text) => {\n    _onChangeText(text);\n\n    const onChangeText = props?.textInputProps?.onChangeText;\n\n    if (onChangeText) {\n      onChangeText(text);\n    }\n  };\n\n  const _getRowLoader = () => {\n    return <ActivityIndicator animating={true} size='small' />;\n  };\n\n  const _renderRowData = (rowData, index) => {\n    if (props.renderRow) {\n      return props.renderRow(rowData, index);\n    }\n\n    return (\n      <Text\n        style={[\n          props.suppressDefaultStyles ? {} : defaultStyles.description,\n          props.styles.description,\n          rowData.isPredefinedPlace\n            ? props.styles.predefinedPlacesDescription\n            : {},\n        ]}\n        numberOfLines={props.numberOfLines}\n      >\n        {_renderDescription(rowData)}\n      </Text>\n    );\n  };\n\n  const _renderDescription = (rowData) => {\n    if (props.renderDescription) {\n      return props.renderDescription(rowData);\n    }\n\n    return rowData.description || rowData.formatted_address || rowData.name;\n  };\n\n  const _renderLoader = (rowData) => {\n    if (rowData.isLoading === true) {\n      return (\n        <View\n          style={[\n            props.suppressDefaultStyles ? {} : defaultStyles.loader,\n            props.styles.loader,\n          ]}\n        >\n          {_getRowLoader()}\n        </View>\n      );\n    }\n\n    return null;\n  };\n\n  const _renderRow = (rowData = {}, index) => {\n    return (\n      <ScrollView\n        contentContainerStyle={\n          props.isRowScrollable ? { minWidth: '100%' } : { width: '100%' }\n        }\n        scrollEnabled={props.isRowScrollable}\n        keyboardShouldPersistTaps={props.keyboardShouldPersistTaps}\n        horizontal={true}\n        showsHorizontalScrollIndicator={false}\n        showsVerticalScrollIndicator={false}\n      >\n        <TouchableHighlight\n          style={\n            props.isRowScrollable ? { minWidth: '100%' } : { width: '100%' }\n          }\n          onPress={() => _onPress(rowData)}\n          underlayColor={props.listUnderlayColor || '#c8c7cc'}\n        >\n          <View\n            style={[\n              props.suppressDefaultStyles ? {} : defaultStyles.row,\n              props.styles.row,\n              rowData.isPredefinedPlace ? props.styles.specialItemRow : {},\n            ]}\n          >\n            {_renderLoader(rowData)}\n            {_renderRowData(rowData, index)}\n          </View>\n        </TouchableHighlight>\n      </ScrollView>\n    );\n  };\n\n  const _renderSeparator = (sectionID, rowID) => {\n    if (rowID === dataSource.length - 1) {\n      return null;\n    }\n\n    return (\n      <View\n        key={`${sectionID}-${rowID}`}\n        style={[\n          props.suppressDefaultStyles ? {} : defaultStyles.separator,\n          props.styles.separator,\n        ]}\n      />\n    );\n  };\n\n  const isNewFocusInAutocompleteResultList = ({\n    relatedTarget,\n    currentTarget,\n  }) => {\n    if (!relatedTarget) return false;\n\n    var node = relatedTarget.parentNode;\n\n    while (node) {\n      if (node.id === 'result-list-id') return true;\n      node = node.parentNode;\n    }\n\n    return false;\n  };\n\n  const _onBlur = (e) => {\n    if (e && isNewFocusInAutocompleteResultList(e)) return;\n\n    if (!props.keepResultsAfterBlur) {\n      setListViewDisplayed(false);\n    }\n    inputRef?.current?.blur();\n  };\n\n  const _onFocus = () => setListViewDisplayed(true);\n\n  const _renderPoweredLogo = () => {\n    if (!_shouldShowPoweredLogo()) {\n      return null;\n    }\n\n    return (\n      <View\n        style={[\n          props.suppressDefaultStyles ? {} : defaultStyles.row,\n          defaultStyles.poweredContainer,\n          props.styles.poweredContainer,\n        ]}\n      >\n        <Image\n          style={[\n            props.suppressDefaultStyles ? {} : defaultStyles.powered,\n            props.styles.powered,\n          ]}\n          resizeMode='contain'\n          source={require('./images/powered_by_google_on_white.png')}\n        />\n      </View>\n    );\n  };\n\n  const _shouldShowPoweredLogo = () => {\n    if (!props.enablePoweredByContainer || dataSource.length === 0) {\n      return false;\n    }\n\n    for (let i = 0; i < dataSource.length; i++) {\n      let row = dataSource[i];\n\n      if (\n        !row.hasOwnProperty('isCurrentLocation') &&\n        !row.hasOwnProperty('isPredefinedPlace')\n      ) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  const _renderLeftButton = () => {\n    if (props.renderLeftButton) {\n      return props.renderLeftButton();\n    }\n  };\n\n  const _renderRightButton = () => {\n    if (props.renderRightButton) {\n      return props.renderRightButton();\n    }\n  };\n\n  const _getFlatList = () => {\n    const keyGenerator = () => Math.random().toString(36).substr(2, 10);\n\n    if (\n      supportedPlatform() &&\n      (stateText !== '' ||\n        props.predefinedPlaces.length > 0 ||\n        props.currentLocation === true) &&\n      listViewDisplayed === true\n    ) {\n      return (\n        <FlatList\n          nativeID='result-list-id'\n          scrollEnabled={!props.disableScroll}\n          style={[\n            props.suppressDefaultStyles ? {} : defaultStyles.listView,\n            props.styles.listView,\n          ]}\n          data={dataSource}\n          keyExtractor={keyGenerator}\n          extraData={[dataSource, props]}\n          ItemSeparatorComponent={_renderSeparator}\n          renderItem={({ item, index }) => _renderRow(item, index)}\n          ListEmptyComponent={\n            stateText.length > props.minLength && props.listEmptyComponent\n          }\n          ListHeaderComponent={\n            props.renderHeaderComponent &&\n            props.renderHeaderComponent(stateText)\n          }\n          ListFooterComponent={_renderPoweredLogo}\n          {...props}\n        />\n      );\n    }\n\n    return null;\n  };\n\n  let {\n    onFocus,\n    onBlur,\n    onChangeText, // destructuring here stops this being set after onChangeText={_handleChangeText}\n    clearButtonMode,\n    InputComp,\n    ...userProps\n  } = props.textInputProps;\n  const TextInputComp = InputComp || TextInput;\n  return (\n    <View\n      style={[\n        props.suppressDefaultStyles ? {} : defaultStyles.container,\n        props.styles.container,\n      ]}\n      pointerEvents='box-none'\n    >\n      {!props.textInputHide && (\n        <View\n          style={[\n            props.suppressDefaultStyles ? {} : defaultStyles.textInputContainer,\n            props.styles.textInputContainer,\n          ]}\n        >\n          {_renderLeftButton()}\n          <TextInputComp\n            ref={inputRef}\n            style={[\n              props.suppressDefaultStyles ? {} : defaultStyles.textInput,\n              props.styles.textInput,\n            ]}\n            value={stateText}\n            placeholder={props.placeholder}\n            onFocus={\n              onFocus\n                ? (e) => {\n                    _onFocus();\n                    onFocus(e);\n                  }\n                : _onFocus\n            }\n            onBlur={\n              onBlur\n                ? (e) => {\n                    _onBlur(e);\n                    onBlur(e);\n                  }\n                : _onBlur\n            }\n            clearButtonMode={clearButtonMode || 'while-editing'}\n            onChangeText={_handleChangeText}\n            {...userProps}\n          />\n          {_renderRightButton()}\n        </View>\n      )}\n      {props.inbetweenCompo}\n      {_getFlatList()}\n      {props.children}\n    </View>\n  );\n});\n\nGooglePlacesAutocomplete.propTypes = {\n  autoFillOnNotFound: PropTypes.bool,\n  currentLocation: PropTypes.bool,\n  currentLocationLabel: PropTypes.string,\n  debounce: PropTypes.number,\n  disableScroll: PropTypes.bool,\n  enableHighAccuracyLocation: PropTypes.bool,\n  enablePoweredByContainer: PropTypes.bool,\n  fetchDetails: PropTypes.bool,\n  filterReverseGeocodingByTypes: PropTypes.array,\n  GooglePlacesDetailsQuery: PropTypes.object,\n  GooglePlacesSearchQuery: PropTypes.object,\n  GoogleReverseGeocodingQuery: PropTypes.object,\n  inbetweenCompo: PropTypes.object,\n  isRowScrollable: PropTypes.bool,\n  keyboardShouldPersistTaps: PropTypes.oneOf(['never', 'always', 'handled']),\n  listEmptyComponent: PropTypes.func,\n  listUnderlayColor: PropTypes.string,\n  // Must write it this way: https://stackoverflow.com/a/54290946/7180620\n  listViewDisplayed: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.oneOf(['auto']),\n  ]),\n  keepResultsAfterBlur: PropTypes.bool,\n  minLength: PropTypes.number,\n  nearbyPlacesAPI: PropTypes.string,\n  numberOfLines: PropTypes.number,\n  onFail: PropTypes.func,\n  onNotFound: PropTypes.func,\n  onPress: PropTypes.func,\n  onTimeout: PropTypes.func,\n  placeholder: PropTypes.string,\n  predefinedPlaces: PropTypes.array,\n  predefinedPlacesAlwaysVisible: PropTypes.bool,\n  preProcess: PropTypes.func,\n  query: PropTypes.object,\n  renderDescription: PropTypes.func,\n  renderHeaderComponent: PropTypes.func,\n  renderLeftButton: PropTypes.func,\n  renderRightButton: PropTypes.func,\n  renderRow: PropTypes.func,\n  requestUrl: PropTypes.shape({\n    url: PropTypes.string,\n    useOnPlatform: PropTypes.oneOf(['web', 'all']),\n    headers: PropTypes.objectOf(PropTypes.string),\n  }),\n  styles: PropTypes.object,\n  suppressDefaultStyles: PropTypes.bool,\n  textInputHide: PropTypes.bool,\n  textInputProps: PropTypes.object,\n  timeout: PropTypes.number,\n};\n\nGooglePlacesAutocomplete.defaultProps = {\n  autoFillOnNotFound: false,\n  currentLocation: false,\n  currentLocationLabel: 'Current location',\n  debounce: 0,\n  disableScroll: false,\n  enableHighAccuracyLocation: true,\n  enablePoweredByContainer: true,\n  fetchDetails: false,\n  filterReverseGeocodingByTypes: [],\n  GooglePlacesDetailsQuery: {},\n  GooglePlacesSearchQuery: {\n    rankby: 'distance',\n    type: 'restaurant',\n  },\n  GoogleReverseGeocodingQuery: {},\n  isRowScrollable: true,\n  keyboardShouldPersistTaps: 'always',\n  listUnderlayColor: '#c8c7cc',\n  listViewDisplayed: 'auto',\n  keepResultsAfterBlur: false,\n  minLength: 0,\n  nearbyPlacesAPI: 'GooglePlacesSearch',\n  numberOfLines: 1,\n  onFail: () => {},\n  onNotFound: () => {},\n  onPress: () => {},\n  onTimeout: () => console.warn('google places autocomplete: request timeout'),\n  placeholder: '',\n  predefinedPlaces: [],\n  predefinedPlacesAlwaysVisible: false,\n  query: {\n    key: 'missing api key',\n    language: 'en',\n    types: 'geocode',\n  },\n  styles: {},\n  suppressDefaultStyles: false,\n  textInputHide: false,\n  textInputProps: {},\n  timeout: 20000,\n};\n\nexport default { GooglePlacesAutocomplete };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}