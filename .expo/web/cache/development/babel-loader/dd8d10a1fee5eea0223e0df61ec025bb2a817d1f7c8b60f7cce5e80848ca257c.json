{"ast":null,"code":"import { defineAnimation } from \"./util\";\nexport function withSequence() {\n  'worklet';\n\n  for (var _len = arguments.length, _animations = new Array(_len), _key = 0; _key < _len; _key++) {\n    _animations[_key] = arguments[_key];\n  }\n  return defineAnimation(_animations[0], function () {\n    'worklet';\n\n    var animations = _animations.map(function (a) {\n      var result = typeof a === 'function' ? a() : a;\n      result.finished = false;\n      return result;\n    });\n    var firstAnimation = animations[0];\n    var callback = function callback(finished) {\n      if (finished) {\n        return;\n      }\n      animations.forEach(function (animation) {\n        if (typeof animation.callback === 'function' && !animation.finished) {\n          animation.callback(finished);\n        }\n      });\n    };\n    function sequence(animation, now) {\n      var currentAnim = animations[animation.animationIndex];\n      var finished = currentAnim.onFrame(currentAnim, now);\n      animation.current = currentAnim.current;\n      if (finished) {\n        if (currentAnim.callback) {\n          currentAnim.callback(true);\n        }\n        currentAnim.finished = true;\n        animation.animationIndex += 1;\n        if (animation.animationIndex < animations.length) {\n          var nextAnim = animations[animation.animationIndex];\n          nextAnim.onStart(nextAnim, currentAnim.current, now, currentAnim);\n          return false;\n        }\n        return true;\n      }\n      return false;\n    }\n    function onStart(animation, value, now, previousAnimation) {\n      animation.animationIndex = 0;\n      if (previousAnimation === undefined) {\n        previousAnimation = animations[animations.length - 1];\n      }\n      firstAnimation.onStart(firstAnimation, value, now, previousAnimation);\n    }\n    return {\n      isHigherOrder: true,\n      onFrame: sequence,\n      onStart: onStart,\n      animationIndex: 0,\n      current: firstAnimation.current,\n      callback: callback\n    };\n  });\n}","map":{"version":3,"names":["defineAnimation","withSequence","_len","arguments","length","_animations","Array","_key","animations","map","a","result","finished","firstAnimation","callback","forEach","animation","sequence","now","currentAnim","animationIndex","onFrame","current","nextAnim","onStart","value","previousAnimation","undefined","isHigherOrder"],"sources":["D:\\xampp\\htdocs\\gotravel1\\toursim-simplified-through-voice-master\\toursim-simplified-through-voice-master\\node_modules\\react-native-reanimated\\lib\\module\\reanimated2\\animation\\sequence.ts"],"sourcesContent":["import { defineAnimation } from './util';\nimport { NextAnimation, SequenceAnimation } from './commonTypes';\nimport {\n  Animation,\n  AnimatableValue,\n  AnimationObject,\n  Timestamp,\n} from '../commonTypes';\n\nexport function withSequence(\n  ..._animations: NextAnimation<AnimationObject>[]\n): Animation<SequenceAnimation> {\n  'worklet';\n  return defineAnimation<SequenceAnimation>(\n    _animations[0] as SequenceAnimation,\n    () => {\n      'worklet';\n      const animations = _animations.map((a) => {\n        const result = typeof a === 'function' ? a() : a;\n        result.finished = false;\n        return result;\n      });\n      const firstAnimation = animations[0];\n\n      const callback = (finished: boolean): void => {\n        if (finished) {\n          // we want to call the callback after every single animation\n          // not after all of them\n          return;\n        }\n        // this is going to be called only if sequence has been cancelled\n        animations.forEach((animation) => {\n          if (typeof animation.callback === 'function' && !animation.finished) {\n            animation.callback(finished);\n          }\n        });\n      };\n\n      function sequence(animation: SequenceAnimation, now: Timestamp): boolean {\n        const currentAnim = animations[animation.animationIndex];\n        const finished = currentAnim.onFrame(currentAnim, now);\n        animation.current = currentAnim.current;\n        if (finished) {\n          // we want to call the callback after every single animation\n          if (currentAnim.callback) {\n            currentAnim.callback(true /* finished */);\n          }\n          currentAnim.finished = true;\n          animation.animationIndex += 1;\n          if (animation.animationIndex < animations.length) {\n            const nextAnim = animations[animation.animationIndex];\n            nextAnim.onStart(nextAnim, currentAnim.current, now, currentAnim);\n            return false;\n          }\n          return true;\n        }\n        return false;\n      }\n\n      function onStart(\n        animation: SequenceAnimation,\n        value: AnimatableValue,\n        now: Timestamp,\n        previousAnimation: SequenceAnimation\n      ): void {\n        animation.animationIndex = 0;\n        if (previousAnimation === undefined) {\n          previousAnimation = animations[\n            animations.length - 1\n          ] as SequenceAnimation;\n        }\n        firstAnimation.onStart(firstAnimation, value, now, previousAnimation);\n      }\n\n      return {\n        isHigherOrder: true,\n        onFrame: sequence,\n        onStart,\n        animationIndex: 0,\n        current: firstAnimation.current,\n        callback,\n      } as SequenceAnimation;\n    }\n  );\n}\n"],"mappings":"AAAA,SAASA,eAAT;AASA,OAAO,SAASC,YAATA,CAAA,EAEyB;EAC9B;;EAD8B,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAD3BC,WAC2B,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;IAD3BF,WAC2B,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;EAAA;EAE9B,OAAOP,eAAe,CACpBK,WAAW,CAAC,CAAD,CADS,EAEpB,YAAM;IACJ;;IACA,IAAMG,UAAU,GAAGH,WAAW,CAACI,GAAZ,CAAiB,UAAAC,CAAD,EAAO;MACxC,IAAMC,MAAM,GAAG,OAAOD,CAAP,KAAa,UAAb,GAA0BA,CAAC,EAA3B,GAAgCA,CAA/C;MACAC,MAAM,CAACC,QAAP,GAAkB,KAAlB;MACA,OAAOD,MAAP;IACD,CAJkB,CAAnB;IAKA,IAAME,cAAc,GAAGL,UAAU,CAAC,CAAD,CAAjC;IAEA,IAAMM,QAAQ,GAAI,SAAZA,QAAQA,CAAIF,QAAD,EAA6B;MAC5C,IAAIA,QAAJ,EAAc;QAGZ;MACD;MAEDJ,UAAU,CAACO,OAAX,CAAoB,UAAAC,SAAD,EAAe;QAChC,IAAI,OAAOA,SAAS,CAACF,QAAjB,KAA8B,UAA9B,IAA4C,CAACE,SAAS,CAACJ,QAA3D,EAAqE;UACnEI,SAAS,CAACF,QAAV,CAAmBF,QAAnB;QACD;MACF,CAJD;IAKD,CAZD;IAcA,SAASK,QAATA,CAAkBD,SAAlB,EAAgDE,GAAhD,EAAyE;MACvE,IAAMC,WAAW,GAAGX,UAAU,CAACQ,SAAS,CAACI,cAAX,CAA9B;MACA,IAAMR,QAAQ,GAAGO,WAAW,CAACE,OAAZ,CAAoBF,WAApB,EAAiCD,GAAjC,CAAjB;MACAF,SAAS,CAACM,OAAV,GAAoBH,WAAW,CAACG,OAAhC;MACA,IAAIV,QAAJ,EAAc;QAEZ,IAAIO,WAAW,CAACL,QAAhB,EAA0B;UACxBK,WAAW,CAACL,QAAZ,CAAqB,KAArB;QACD;QACDK,WAAW,CAACP,QAAZ,GAAuB,IAAvB;QACAI,SAAS,CAACI,cAAV,IAA4B,CAA5B;QACA,IAAIJ,SAAS,CAACI,cAAV,GAA2BZ,UAAU,CAACJ,MAA1C,EAAkD;UAChD,IAAMmB,QAAQ,GAAGf,UAAU,CAACQ,SAAS,CAACI,cAAX,CAA3B;UACAG,QAAQ,CAACC,OAAT,CAAiBD,QAAjB,EAA2BJ,WAAW,CAACG,OAAvC,EAAgDJ,GAAhD,EAAqDC,WAArD;UACA,OAAO,KAAP;QACD;QACD,OAAO,IAAP;MACD;MACD,OAAO,KAAP;IACD;IAED,SAASK,OAATA,CACER,SADF,EAEES,KAFF,EAGEP,GAHF,EAIEQ,iBAJF,EAKQ;MACNV,SAAS,CAACI,cAAV,GAA2B,CAA3B;MACA,IAAIM,iBAAiB,KAAKC,SAA1B,EAAqC;QACnCD,iBAAiB,GAAGlB,UAAU,CAC5BA,UAAU,CAACJ,MAAX,GAAoB,CADQ,CAA9B;MAGD;MACDS,cAAc,CAACW,OAAf,CAAuBX,cAAvB,EAAuCY,KAAvC,EAA8CP,GAA9C,EAAmDQ,iBAAnD;IACD;IAED,OAAO;MACLE,aAAa,EAAE,IADV;MAELP,OAAO,EAAEJ,QAFJ;MAGLO,OAHK,EAGLA,OAHK;MAILJ,cAAc,EAAE,CAJX;MAKLE,OAAO,EAAET,cAAc,CAACS,OALnB;MAMLR,QAAA,EAAAA;IANK,CAAP;EAQD,CArEmB,CAAtB;AAuED"},"metadata":{},"sourceType":"module","externalDependencies":[]}