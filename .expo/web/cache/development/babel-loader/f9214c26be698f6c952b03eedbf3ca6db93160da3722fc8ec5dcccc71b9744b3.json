{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _workletStackDetails = new Map();\nexport function registerWorkletStackDetails(hash, stackDetails) {\n  _workletStackDetails.set(hash, stackDetails);\n}\nfunction getBundleOffset(error) {\n  var _error$stack, _error$stack$split;\n  var frame = (_error$stack = error.stack) === null || _error$stack === void 0 ? void 0 : (_error$stack$split = _error$stack.split('\\n')) === null || _error$stack$split === void 0 ? void 0 : _error$stack$split[0];\n  if (frame) {\n    var parsedFrame = /@([^@]+):(\\d+):(\\d+)/.exec(frame);\n    if (parsedFrame) {\n      var _parsedFrame = _slicedToArray(parsedFrame, 4),\n        file = _parsedFrame[1],\n        line = _parsedFrame[2],\n        col = _parsedFrame[3];\n      return [file, Number(line), Number(col)];\n    }\n  }\n  return ['unknown', 0, 0];\n}\nfunction processStack(stack) {\n  var workletStackEntries = stack.match(/worklet_(\\d+):(\\d+):(\\d+)/g);\n  var result = stack;\n  workletStackEntries === null || workletStackEntries === void 0 ? void 0 : workletStackEntries.forEach(function (match) {\n    var _match$split$map = match.split(/:|_/).map(Number),\n      _match$split$map2 = _slicedToArray(_match$split$map, 4),\n      hash = _match$split$map2[1],\n      origLine = _match$split$map2[2],\n      origCol = _match$split$map2[3];\n    var errorDetails = _workletStackDetails.get(hash);\n    if (!errorDetails) {\n      return;\n    }\n    var _errorDetails = _slicedToArray(errorDetails, 3),\n      error = _errorDetails[0],\n      lineOffset = _errorDetails[1],\n      colOffset = _errorDetails[2];\n    var _getBundleOffset = getBundleOffset(error),\n      _getBundleOffset2 = _slicedToArray(_getBundleOffset, 3),\n      bundleFile = _getBundleOffset2[0],\n      bundleLine = _getBundleOffset2[1],\n      bundleCol = _getBundleOffset2[2];\n    var line = origLine + bundleLine + lineOffset;\n    var col = origCol + bundleCol + colOffset;\n    result = result.replace(match, bundleFile + \":\" + line + \":\" + col);\n  });\n  return result;\n}\nexport function reportFatalErrorOnJS(_ref) {\n  var message = _ref.message,\n    stack = _ref.stack;\n  var error = new Error();\n  error.message = message;\n  error.stack = stack ? processStack(stack) : undefined;\n  error.name = 'ReanimatedError';\n  error.jsEngine = 'reanimated';\n  global.ErrorUtils.reportFatalError(error);\n}","map":{"version":3,"names":["_workletStackDetails","Map","registerWorkletStackDetails","hash","stackDetails","set","getBundleOffset","error","_error$stack","_error$stack$split","frame","stack","split","parsedFrame","exec","_parsedFrame","_slicedToArray","file","line","col","Number","processStack","workletStackEntries","match","result","forEach","_match$split$map","map","_match$split$map2","origLine","origCol","errorDetails","get","_errorDetails","lineOffset","colOffset","_getBundleOffset","_getBundleOffset2","bundleFile","bundleLine","bundleCol","replace","reportFatalErrorOnJS","_ref","message","Error","undefined","name","jsEngine","global","ErrorUtils","reportFatalError"],"sources":["D:\\xampp\\htdocs\\gotravel1\\toursim-simplified-through-voice-master\\toursim-simplified-through-voice-master\\node_modules\\react-native-reanimated\\lib\\module\\reanimated2\\errors.ts"],"sourcesContent":["type StackDetails = [Error, number, number];\n\nconst _workletStackDetails = new Map<number, StackDetails>();\n\nexport function registerWorkletStackDetails(\n  hash: number,\n  stackDetails: StackDetails\n) {\n  _workletStackDetails.set(hash, stackDetails);\n}\n\nfunction getBundleOffset(error: Error): [string, number, number] {\n  const frame = error.stack?.split('\\n')?.[0];\n  if (frame) {\n    const parsedFrame = /@([^@]+):(\\d+):(\\d+)/.exec(frame);\n    if (parsedFrame) {\n      const [, file, line, col] = parsedFrame;\n      return [file, Number(line), Number(col)];\n    }\n  }\n  return ['unknown', 0, 0];\n}\n\nfunction processStack(stack: string): string {\n  const workletStackEntries = stack.match(/worklet_(\\d+):(\\d+):(\\d+)/g);\n  let result = stack;\n  workletStackEntries?.forEach((match) => {\n    const [, hash, origLine, origCol] = match.split(/:|_/).map(Number);\n    const errorDetails = _workletStackDetails.get(hash);\n    if (!errorDetails) {\n      return;\n    }\n    const [error, lineOffset, colOffset] = errorDetails;\n    const [bundleFile, bundleLine, bundleCol] = getBundleOffset(error);\n    const line = origLine + bundleLine + lineOffset;\n    const col = origCol + bundleCol + colOffset;\n\n    result = result.replace(match, `${bundleFile}:${line}:${col}`);\n  });\n  return result;\n}\n\nexport function reportFatalErrorOnJS({\n  message,\n  stack,\n}: {\n  message: string;\n  stack?: string;\n}) {\n  const error = new Error();\n  error.message = message;\n  error.stack = stack ? processStack(stack) : undefined;\n  error.name = 'ReanimatedError';\n  // @ts-ignore React Native's ErrorUtils implementation extends the Error type with jsEngine field\n  error.jsEngine = 'reanimated';\n  global.ErrorUtils.reportFatalError(error);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}