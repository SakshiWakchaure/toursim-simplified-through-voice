{"ast":null,"code":"import { useEffect, useRef } from 'react';\nimport { makeMutable, subscribeForKeyboardEvents, unsubscribeFromKeyboardEvents } from \"../core\";\nimport { KeyboardState } from \"../commonTypes\";\nexport function useAnimatedKeyboard() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    isStatusBarTranslucentAndroid: false\n  };\n  var ref = useRef(null);\n  var listenerId = useRef(-1);\n  var isSubscribed = useRef(false);\n  if (ref.current === null) {\n    var keyboardEventData = {\n      state: makeMutable(KeyboardState.UNKNOWN),\n      height: makeMutable(0)\n    };\n    listenerId.current = subscribeForKeyboardEvents(function (state, height) {\n      'worklet';\n\n      keyboardEventData.state.value = state;\n      keyboardEventData.height.value = height;\n    }, options);\n    ref.current = keyboardEventData;\n    isSubscribed.current = true;\n  }\n  useEffect(function () {\n    if (isSubscribed.current === false && ref.current !== null) {\n      var _keyboardEventData = ref.current;\n      listenerId.current = subscribeForKeyboardEvents(function (state, height) {\n        'worklet';\n\n        _keyboardEventData.state.value = state;\n        _keyboardEventData.height.value = height;\n      }, options);\n      isSubscribed.current = true;\n    }\n    return function () {\n      unsubscribeFromKeyboardEvents(listenerId.current);\n      isSubscribed.current = false;\n    };\n  }, []);\n  return ref.current;\n}","map":{"version":3,"names":["useEffect","useRef","makeMutable","subscribeForKeyboardEvents","unsubscribeFromKeyboardEvents","KeyboardState","useAnimatedKeyboard","options","arguments","length","undefined","isStatusBarTranslucentAndroid","ref","listenerId","isSubscribed","current","keyboardEventData","state","UNKNOWN","height","value"],"sources":["D:\\xampp\\htdocs\\gotravel1\\toursim-simplified-through-voice-master\\toursim-simplified-through-voice-master\\node_modules\\react-native-reanimated\\lib\\module\\reanimated2\\hook\\useAnimatedKeyboard.ts"],"sourcesContent":["import { useEffect, useRef } from 'react';\nimport {\n  makeMutable,\n  subscribeForKeyboardEvents,\n  unsubscribeFromKeyboardEvents,\n} from '../core';\nimport {\n  AnimatedKeyboardInfo,\n  AnimatedKeyboardOptions,\n  KeyboardState,\n} from '../commonTypes';\n\nexport function useAnimatedKeyboard(\n  options: AnimatedKeyboardOptions = { isStatusBarTranslucentAndroid: false }\n): AnimatedKeyboardInfo {\n  const ref = useRef<AnimatedKeyboardInfo | null>(null);\n  const listenerId = useRef<number>(-1);\n  const isSubscribed = useRef<boolean>(false);\n\n  if (ref.current === null) {\n    const keyboardEventData: AnimatedKeyboardInfo = {\n      state: makeMutable<KeyboardState>(KeyboardState.UNKNOWN),\n      height: makeMutable(0),\n    };\n    listenerId.current = subscribeForKeyboardEvents((state, height) => {\n      'worklet';\n      keyboardEventData.state.value = state;\n      keyboardEventData.height.value = height;\n    }, options);\n    ref.current = keyboardEventData;\n    isSubscribed.current = true;\n  }\n  useEffect(() => {\n    if (isSubscribed.current === false && ref.current !== null) {\n      const keyboardEventData = ref.current;\n      // subscribe again after Fast Refresh\n      listenerId.current = subscribeForKeyboardEvents((state, height) => {\n        'worklet';\n        keyboardEventData.state.value = state;\n        keyboardEventData.height.value = height;\n      }, options);\n      isSubscribed.current = true;\n    }\n    return () => {\n      unsubscribeFromKeyboardEvents(listenerId.current);\n      isSubscribed.current = false;\n    };\n  }, []);\n  return ref.current;\n}\n"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;AACA,SACEC,WADF,EAEEC,0BAFF,EAGEC,6BAHF;AAKA,SAGEC,aAHF;AAMA,OAAO,SAASC,mBAATA,CAAA,EAEiB;EAAA,IADtBC,OACsB,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MADa;IAAEG,6BAA6B,EAAE;EAAjC,CACb;EACtB,IAAMC,GAAG,GAAGX,MAAM,CAA8B,IAA9B,CAAlB;EACA,IAAMY,UAAU,GAAGZ,MAAM,CAAS,CAAC,CAAV,CAAzB;EACA,IAAMa,YAAY,GAAGb,MAAM,CAAU,KAAV,CAA3B;EAEA,IAAIW,GAAG,CAACG,OAAJ,KAAgB,IAApB,EAA0B;IACxB,IAAMC,iBAAuC,GAAG;MAC9CC,KAAK,EAAEf,WAAW,CAAgBG,aAAa,CAACa,OAA9B,CAD4B;MAE9CC,MAAM,EAAEjB,WAAW,CAAC,CAAD;IAF2B,CAAhD;IAIAW,UAAU,CAACE,OAAX,GAAqBZ,0BAA0B,CAAC,UAACc,KAAD,EAAQE,MAAR,EAAmB;MACjE;;MACAH,iBAAiB,CAACC,KAAlB,CAAwBG,KAAxB,GAAgCH,KAAhC;MACAD,iBAAiB,CAACG,MAAlB,CAAyBC,KAAzB,GAAiCD,MAAjC;IACD,CAJ8C,EAI5CZ,OAJ4C,CAA/C;IAKAK,GAAG,CAACG,OAAJ,GAAcC,iBAAd;IACAF,YAAY,CAACC,OAAb,GAAuB,IAAvB;EACD;EACDf,SAAS,CAAC,YAAM;IACd,IAAIc,YAAY,CAACC,OAAb,KAAyB,KAAzB,IAAkCH,GAAG,CAACG,OAAJ,KAAgB,IAAtD,EAA4D;MAC1D,IAAMC,kBAAiB,GAAGJ,GAAG,CAACG,OAA9B;MAEAF,UAAU,CAACE,OAAX,GAAqBZ,0BAA0B,CAAC,UAACc,KAAD,EAAQE,MAAR,EAAmB;QACjE;;QACAH,kBAAiB,CAACC,KAAlB,CAAwBG,KAAxB,GAAgCH,KAAhC;QACAD,kBAAiB,CAACG,MAAlB,CAAyBC,KAAzB,GAAiCD,MAAjC;MACD,CAJ8C,EAI5CZ,OAJ4C,CAA/C;MAKAO,YAAY,CAACC,OAAb,GAAuB,IAAvB;IACD;IACD,OAAO,YAAM;MACXX,6BAA6B,CAACS,UAAU,CAACE,OAAZ,CAA7B;MACAD,YAAY,CAACC,OAAb,GAAuB,KAAvB;IACD,CAHD;EAID,CAfQ,EAeN,EAfM,CAAT;EAgBA,OAAOH,GAAG,CAACG,OAAX;AACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}