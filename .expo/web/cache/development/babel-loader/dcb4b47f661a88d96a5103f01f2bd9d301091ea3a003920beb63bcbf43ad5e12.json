{"ast":null,"code":"import { StyledComponent } from \"tailwindcss-react-native\";\nimport React, { useState } from \"react\";\nimport { StatusBar } from \"expo-status-bar\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { TailwindProvider } from \"tailwindcss-react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport Discover from \"./screens/Discover\";\nimport ItemScreen from \"./screens/ItemScreen\";\nimport Map from \"./screens/Map\";\nimport New from \"./screens/New\";\nimport 'react-native-gesture-handler';\nimport 'regenerator-runtime/runtime';\nimport Login from \"./screens/Login\";\nimport New_sign from \"./screens/New_sign\";\nimport Contact from \"./screens/Contact\";\nimport Speech from \"./screens/Speech\";\nimport { recognition } from \"./api/VoiceRecognization\";\nimport { Link, useNavigation } from \"@react-navigation/native\";\nimport { useLayoutEffect } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nexport default function App(_ref) {\n  var navigation = _ref.navigation;\n  var navigate = useNavigation();\n  console.log(recognition);\n  recognition.start();\n  recognition.onresult = function (event) {\n    var command = event.results[0][0].transcript;\n    if (command.includes(\"navigate to\") || command.includes(\"go to\")) {\n      if (command.includes(\"homepage\") || command.includes(\"indexpage\")) {} else if (command.includes(\"homepage\") || command.includes(\"indexpage\")) {}\n    }\n  };\n  recognition.onend = function () {\n    recognition.start();\n  };\n  return _jsx(TailwindProvider, {\n    children: _jsx(NavigationContainer, {\n      children: _jsxs(Stack.Navigator, {\n        children: [_jsx(Stack.Screen, {\n          name: \"Home\",\n          component: HomeScreen\n        }), _jsx(Stack.Screen, {\n          name: \"Discover\",\n          component: Discover\n        }), _jsx(Stack.Screen, {\n          name: \"ItemScreen\",\n          component: ItemScreen\n        }), _jsx(Stack.Screen, {\n          name: \"New\",\n          component: New\n        }), _jsx(Stack.Screen, {\n          name: \"Map\",\n          component: Map\n        }), _jsx(Stack.Screen, {\n          name: \"New_sign\",\n          component: New_sign\n        }), _jsx(Stack.Screen, {\n          name: \"Contact\",\n          component: Contact\n        }), _jsx(Stack.Screen, {\n          name: \"Speech\",\n          component: Speech\n        })]\n      })\n    })\n  });\n}","map":{"version":3,"names":["React","useState","StatusBar","SafeAreaView","Text","View","TailwindProvider","NavigationContainer","createNativeStackNavigator","HomeScreen","Discover","ItemScreen","Map","New","Login","New_sign","Contact","Speech","recognition","Link","useNavigation","useLayoutEffect","jsx","_jsx","jsxs","_jsxs","Stack","App","_ref","navigation","navigate","console","log","start","onresult","event","command","results","transcript","includes","onend","children","Navigator","Screen","name","component"],"sources":["D:/xampp/htdocs/gotravel1/tourism simplified through voice/App.js"],"sourcesContent":["import React ,{useState} from \"react\";\r\nimport { StatusBar } from \"expo-status-bar\";\r\nimport { SafeAreaView, Text, View } from \"react-native\";\r\nimport { TailwindProvider } from \"tailwindcss-react-native\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\nimport HomeScreen from \"./screens/HomeScreen\";\r\nimport Discover from \"./screens/Discover\";\r\nimport ItemScreen from \"./screens/ItemScreen\";\r\nimport Map from \"./screens/Map\";\r\nimport New from \"./screens/New\";\r\n\r\n//import Login from \"./screens/Login\";\r\nimport 'react-native-gesture-handler';\r\nimport 'regenerator-runtime/runtime';\r\nimport Login from \"./screens/Login\";\r\nimport New_sign from \"./screens/New_sign\";\r\nimport Contact from \"./screens/Contact\";\r\nimport Speech from \"./screens/Speech\";\r\nimport { recognition } from \"./api/VoiceRecognization\";\r\n//import { useNavigation } from \"react-router-dom\";\r\nimport { Link, useNavigation} from \"@react-navigation/native\";\r\nimport { useLayoutEffect } from \"react\";\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nexport default function App({navigation}) {\r\n  const navigate=useNavigation();\r\n  \r\n  // useLayoutEffect(() => {\r\n  //   navigate.setOptions({\r\n  //     headerShown: false,\r\n  //   });\r\n  // }, []);\r\n\r\n  console.log(recognition)\r\n  recognition.start()\r\n\r\n  recognition.onresult=(event)=>{\r\n  \r\n    const command =event.results[0][0].transcript;\r\n    \r\n    if(command.includes(\"navigate to\") || command.includes(\"go to\")){\r\n      if(command.includes(\"homepage\") || command.includes(\"indexpage\")){\r\n       // navigate.push(\"/HomeScreen\")\r\n        // navigation.navigate(\"/HomeScreen\")\r\n      }\r\n      else if(command.includes(\"homepage\") || command.includes(\"indexpage\")){\r\n       // navigate.push(\"/HomeScreen\")\r\n      \r\n      \r\n\r\n      }\r\n    }\r\n  }\r\n\r\n  recognition.onend=()=>{\r\n    recognition.start()\r\n\r\n  }\r\n  return (\r\n    \r\n    <TailwindProvider>\r\n      <NavigationContainer>\r\n        <Stack.Navigator>\r\n          \r\n          <Stack.Screen name=\"Home\" component={HomeScreen} />\r\n          <Stack.Screen name=\"Discover\" component={Discover} />\r\n          <Stack.Screen name=\"ItemScreen\" component={ItemScreen} />\r\n          <Stack.Screen name=\"New\" component={New}></Stack.Screen>\r\n          <Stack.Screen name=\"Map\" component={Map}/>\r\n          <Stack.Screen name=\"New_sign\" component={New_sign}></Stack.Screen>\r\n          <Stack.Screen name=\"Contact\" component={Contact}></Stack.Screen>\r\n          <Stack.Screen name=\"Speech\" component={Speech}></Stack.Screen>\r\n          \r\n          \r\n        </Stack.Navigator>\r\n      </NavigationContainer>\r\n    </TailwindProvider>\r\n\r\n    \r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}