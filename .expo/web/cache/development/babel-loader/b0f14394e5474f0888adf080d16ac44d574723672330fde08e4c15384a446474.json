{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StyledComponent } from \"tailwindcss-react-native\";\nimport React, { useState } from \"react\";\nimport { StatusBar } from \"expo-status-bar\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { TailwindProvider } from \"tailwindcss-react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport Discover from \"./screens/Discover\";\nimport ItemScreen from \"./screens/ItemScreen\";\nimport Map from \"./screens/Map\";\nimport New from \"./screens/New\";\nimport { BrowserRouter, Router } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport 'react-native-gesture-handler';\nimport 'regenerator-runtime/runtime';\nimport Login from \"./screens/Login\";\nimport New_sign from \"./screens/New_sign\";\nimport Contact from \"./screens/Contact\";\nimport Speech from \"./screens/Speech\";\nimport { recognition } from \"./api/VoiceRecognization\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport SpeechRecognition, { useSpeechRecognition } from \"react-speech-recognition\";\nimport { useFocusEffect } from \"@react-navigation/native\";\nimport { useLayoutEffect } from \"react\";\nimport { useRef } from \"react\";\nconsole.reportErrorsAsExceptions = false;\nvar Stack = createNativeStackNavigator();\nimport { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    transcript = _useState2[0],\n    setTranscript = _useState2[1];\n  return _jsx(TailwindProvider, {\n    children: _jsx(NavigationContainer, {\n      children: _jsxs(Stack.Navigator, {\n        children: [_jsx(Stack.Screen, {\n          name: \"Home\",\n          component: HomeScreen\n        }), _jsx(Stack.Screen, {\n          name: \"Discover\",\n          component: Discover\n        }), _jsx(Stack.Screen, {\n          name: \"ItemScreen\",\n          component: ItemScreen\n        }), _jsx(Stack.Screen, {\n          name: \"New\",\n          component: New\n        }), _jsx(Stack.Screen, {\n          name: \"Map\",\n          component: Map\n        }), _jsx(Stack.Screen, {\n          name: \"New_sign\",\n          component: New_sign\n        }), _jsx(Stack.Screen, {\n          name: \"Contact\",\n          component: Contact\n        }), _jsx(Stack.Screen, {\n          name: \"Speech\",\n          component: Speech\n        })]\n      })\n    })\n  });\n}","map":{"version":3,"names":["React","useState","StatusBar","SafeAreaView","Text","View","TailwindProvider","NavigationContainer","createNativeStackNavigator","HomeScreen","Discover","ItemScreen","Map","New","BrowserRouter","Router","Link","Login","New_sign","Contact","Speech","recognition","useNavigation","SpeechRecognition","useSpeechRecognition","useFocusEffect","useLayoutEffect","useRef","console","reportErrorsAsExceptions","Stack","useEffect","useNavigate","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","transcript","setTranscript","children","Navigator","Screen","name","component"],"sources":["D:/xampp/htdocs/gotravel1/toursim-simplified-through-voice-master/toursim-simplified-through-voice-master/App.js"],"sourcesContent":["import React ,{useState} from \"react\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { SafeAreaView, Text, View } from \"react-native\";\nimport { TailwindProvider } from \"tailwindcss-react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport Discover from \"./screens/Discover\";\nimport ItemScreen from \"./screens/ItemScreen\";\nimport Map from \"./screens/Map\";\nimport New from \"./screens/New\";\nimport { BrowserRouter, Router} from \"react-router-dom\";\n//import Login from \"./screens/Login\";\nimport { Link } from \"react-router-dom\";\nimport 'react-native-gesture-handler';\nimport 'regenerator-runtime/runtime';\nimport Login from \"./screens/Login\";\nimport New_sign from \"./screens/New_sign\";\nimport Contact from \"./screens/Contact\";\nimport Speech from \"./screens/Speech\";\nimport { recognition } from \"./api/VoiceRecognization\";\n//import { useNavigation, redirect, Route, Routes } from \"react-router-dom\";\nimport { useNavigation} from \"@react-navigation/native\";\nimport SpeechRecognition,{useSpeechRecognition} from \"react-speech-recognition\";\nimport { useFocusEffect } from \"@react-navigation/native\";\nimport { useLayoutEffect } from \"react\";\n//import { Navigate, useNavigate } from \"react-router-dom\";\n//import {useHistory} from 'react-router-dom';\nimport { useRef } from \"react\";\nconsole.reportErrorsAsExceptions = false;\nconst Stack = createNativeStackNavigator();\nimport { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n\nexport default function App() {\n\n      const [transcript, setTranscript] = useState('');\n\n \n  return (\n    \n    <TailwindProvider>\n      <NavigationContainer>\n        <Stack.Navigator>\n                  \n          <Stack.Screen name=\"Home\" component={HomeScreen} />\n          \n          <Stack.Screen name=\"Discover\" component={Discover} />\n         \n          <Stack.Screen name=\"ItemScreen\" component={ItemScreen} />\n          \n          <Stack.Screen name=\"New\" component={New}></Stack.Screen>\n          <Stack.Screen name=\"Map\" component={Map}/>\n          <Stack.Screen name=\"New_sign\" component={New_sign}></Stack.Screen>\n          <Stack.Screen name=\"Contact\" component={Contact}></Stack.Screen>\n          <Stack.Screen name=\"Speech\" component={Speech}></Stack.Screen>\n          \n          \n        </Stack.Navigator>\n      </NavigationContainer>\n    </TailwindProvider>\n\n    \n  );\n}\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,SAASC,SAAS,QAAQ,iBAAiB;AAAC,OAAAC,YAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAE5C,SAASC,gBAAgB,QAAQ,0BAA0B;AAC3D,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,0BAA0B,QAAQ,gCAAgC;AAC3E,OAAOC,UAAU;AACjB,OAAOC,QAAQ;AACf,OAAOC,UAAU;AACjB,OAAOC,GAAG;AACV,OAAOC,GAAG;AACV,SAASC,aAAa,EAAEC,MAAM,QAAO,kBAAkB;AAEvD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAO,8BAA8B;AACrC,OAAO,6BAA6B;AACpC,OAAOC,KAAK;AACZ,OAAOC,QAAQ;AACf,OAAOC,OAAO;AACd,OAAOC,MAAM;AACb,SAASC,WAAW;AAEpB,SAASC,aAAa,QAAO,0BAA0B;AACvD,OAAOC,iBAAiB,IAAEC,oBAAoB,QAAO,0BAA0B;AAC/E,SAASC,cAAc,QAAQ,0BAA0B;AACzD,SAASC,eAAe,QAAQ,OAAO;AAGvC,SAASC,MAAM,QAAQ,OAAO;AAC9BC,OAAO,CAACC,wBAAwB,GAAG,KAAK;AACxC,IAAMC,KAAK,GAAGtB,0BAA0B,EAAE;AAC1C,SAASuB,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAG/C,eAAe,SAASC,GAAGA,CAAA,EAAG;EAExB,IAAAC,SAAA,GAAoCrC,QAAQ,CAAC,EAAE,CAAC;IAAAsC,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAzCG,UAAU,GAAAF,UAAA;IAAEG,aAAa,GAAAH,UAAA;EAGpC,OAEEL,IAAA,CAAC5B,gBAAgB;IAAAqC,QAAA,EACfT,IAAA,CAAC3B,mBAAmB;MAAAoC,QAAA,EAClBP,KAAA,CAACN,KAAK,CAACc,SAAS;QAAAD,QAAA,GAEdT,IAAA,CAACJ,KAAK,CAACe,MAAM;UAACC,IAAI,EAAC,MAAM;UAACC,SAAS,EAAEtC;QAAW,EAAG,EAEnDyB,IAAA,CAACJ,KAAK,CAACe,MAAM;UAACC,IAAI,EAAC,UAAU;UAACC,SAAS,EAAErC;QAAS,EAAG,EAErDwB,IAAA,CAACJ,KAAK,CAACe,MAAM;UAACC,IAAI,EAAC,YAAY;UAACC,SAAS,EAAEpC;QAAW,EAAG,EAEzDuB,IAAA,CAACJ,KAAK,CAACe,MAAM;UAACC,IAAI,EAAC,KAAK;UAACC,SAAS,EAAElC;QAAI,EAAgB,EACxDqB,IAAA,CAACJ,KAAK,CAACe,MAAM;UAACC,IAAI,EAAC,KAAK;UAACC,SAAS,EAAEnC;QAAI,EAAE,EAC1CsB,IAAA,CAACJ,KAAK,CAACe,MAAM;UAACC,IAAI,EAAC,UAAU;UAACC,SAAS,EAAE7B;QAAS,EAAgB,EAClEgB,IAAA,CAACJ,KAAK,CAACe,MAAM;UAACC,IAAI,EAAC,SAAS;UAACC,SAAS,EAAE5B;QAAQ,EAAgB,EAChEe,IAAA,CAACJ,KAAK,CAACe,MAAM;UAACC,IAAI,EAAC,QAAQ;UAACC,SAAS,EAAE3B;QAAO,EAAgB;MAAA;IAG9C;EACE,EACL;AAIvB"},"metadata":{},"sourceType":"module","externalDependencies":[]}